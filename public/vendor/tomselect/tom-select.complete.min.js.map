{"version":3,"file":"tom-select.complete.min.js","sources":["../../src/contrib/microevent.ts","../../node_modules/@orchidjs/sifter/lib/diacritics.ts","../../node_modules/@orchidjs/sifter/lib/utils.ts","../../node_modules/@orchidjs/sifter/lib/sifter.ts","../../src/vanilla.ts","../../src/contrib/highlight.ts","../../src/constants.ts","../../src/defaults.ts","../../src/utils.ts","../../src/getSettings.ts","../../src/tom-select.ts","../../src/contrib/microplugin.ts","../../src/plugins/change_listener/plugin.ts","../../src/plugins/checkbox_options/plugin.ts","../../src/plugins/clear_button/plugin.ts","../../src/plugins/drag_drop/plugin.ts","../../src/plugins/dropdown_header/plugin.ts","../../src/plugins/dropdown_input/plugin.ts","../../src/plugins/input_autogrow/plugin.ts","../../src/plugins/no_backspace_delete/plugin.ts","../../src/plugins/no_active_items/plugin.ts","../../src/plugins/optgroup_columns/plugin.ts","../../src/plugins/remove_button/plugin.ts","../../src/plugins/restore_on_backspace/plugin.ts","../../src/plugins/virtual_scroll/plugin.ts"],"sourcesContent":["/**\n * MicroEvent - to make any js object an event emitter\n *\n * - pure javascript - server compatible, browser compatible\n * - dont rely on the browser doms\n * - super simple - you get it immediatly, no mistery, no magic involved\n *\n * @author Jerome Etienne (https://github.com/jeromeetienne)\n */\n\ntype TCallback = (...args:any) => any;\n\n/**\n * Execute callback for each event in space separated list of event names\n *\n */\nfunction forEvents(events:string,callback:(event:string)=>any){\n\tevents.split(/\\s+/).forEach((event) =>{\n\t\tcallback(event);\n\t});\n}\n\nexport default class MicroEvent{\n\n\tpublic _events: {[key:string]:TCallback[]};\n\n\tconstructor(){\n\t\tthis._events = {};\n\t}\n\n\ton(events:string, fct:TCallback){\n\t\tforEvents(events,(event) => {\n\t\t\tthis._events[event] = this._events[event] || [];\n\t\t\tthis._events[event].push(fct);\n\t\t});\n\t}\n\n\toff(events:string, fct:TCallback){\n\t\tvar n = arguments.length;\n\t\tif( n === 0 ){\n\t\t\tthis._events = {};\n\t\t\treturn;\n\t\t}\n\n\t\tforEvents(events,(event) => {\n\n\t\t\tif (n === 1) return delete this._events[event];\n\n\t\t\tif (event in this._events === false) return;\n\t\t\tthis._events[event].splice(this._events[event].indexOf(fct), 1);\n\t\t});\n\t}\n\n\ttrigger(events:string, ...args:any){\n\t\tvar self = this;\n\n\t\tforEvents(events,(event) => {\n\t\t\tif(event in self._events === false) return;\n\t\t\tfor( let fct of self._events[event] ){\n\t\t\t\tfct.apply(self, args );\n\t\t\t}\n\t\t});\n\t}\n};\n","\ntype TDiacraticList = {[key:string]:string};\n\n// https://github.com/andrewrk/node-diacritics/blob/master/index.js\nexport const DIACRITICS:TDiacraticList = {\n\t\" \":\" \",\n\t0:\"߀\",\n\tA:\"ⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ\",\n\tAA:\"Ꜳ\",\n\tAE:\"ÆǼǢ\",\n\tAO:\"Ꜵ\",\n\tAU:\"Ꜷ\",\n\tAV:\"ꜸꜺ\",\n\tAY:\"Ꜽ\",\n\tB:\"ⒷＢḂḄḆɃƁ\",\n\tC:\"ⒸＣꜾḈĆCĈĊČÇƇȻ\",\n\tD:\"ⒹＤḊĎḌḐḒḎĐƊƉᴅꝹ\",\n\tDh:\"Ð\",\n\tDZ:\"ǱǄ\",\n\tDz:\"ǲǅ\",\n\tE:\"ɛⒺＥÈÉÊỀẾỄỂẼĒḔḖĔĖËẺĚȄȆẸỆȨḜĘḘḚƐƎᴇ\",\n\tF:\"ꝼⒻＦḞƑꝻ\",\n\tG:\"ⒼＧǴĜḠĞĠǦĢǤƓꞠꝽꝾɢ\",\n\tH:\"ⒽＨĤḢḦȞḤḨḪĦⱧⱵꞍ\",\n\tI:\"ⒾＩÌÍÎĨĪĬİÏḮỈǏȈȊỊĮḬƗ\",\n\tJ:\"ⒿＪĴɈȷ\",\n\tK:\"ⓀＫḰǨḲĶḴƘⱩꝀꝂꝄꞢ\",\n\tL:\"ⓁＬĿĹĽḶḸĻḼḺŁȽⱢⱠꝈꝆꞀ\",\n\tLJ:\"Ǉ\",\n\tLj:\"ǈ\",\n\tM:\"ⓂＭḾṀṂⱮƜϻ\",\n\tN:\"ꞤȠⓃＮǸŃÑṄŇṆŅṊṈƝꞐᴎ\",\n\tNJ:\"Ǌ\",\n\tNj:\"ǋ\",\n\tO:\"ⓄＯÒÓÔỒỐỖỔÕṌȬṎŌṐṒŎȮȰÖȪỎŐǑȌȎƠỜỚỠỞỢỌỘǪǬØǾƆƟꝊꝌ\",\n\tOE:\"Œ\",\n\tOI:\"Ƣ\",\n\tOO:\"Ꝏ\",\n\tOU:\"Ȣ\",\n\tP:\"ⓅＰṔṖƤⱣꝐꝒꝔ\",\n\tQ:\"ⓆＱꝖꝘɊ\",\n\tR:\"ⓇＲŔṘŘȐȒṚṜŖṞɌⱤꝚꞦꞂ\",\n\tS:\"ⓈＳẞŚṤŜṠŠṦṢṨȘŞⱾꞨꞄ\",\n\tT:\"ⓉＴṪŤṬȚŢṰṮŦƬƮȾꞆ\",\n\tTh:\"Þ\",\n\tTZ:\"Ꜩ\",\n\tU:\"ⓊＵÙÚÛŨṸŪṺŬÜǛǗǕǙỦŮŰǓȔȖƯỪỨỮỬỰỤṲŲṶṴɄ\",\n\tV:\"ⓋＶṼṾƲꝞɅ\",\n\tVY:\"Ꝡ\",\n\tW:\"ⓌＷẀẂŴẆẄẈⱲ\",\n\tX:\"ⓍＸẊẌ\",\n\tY:\"ⓎＹỲÝŶỸȲẎŸỶỴƳɎỾ\",\n\tZ:\"ⓏＺŹẐŻŽẒẔƵȤⱿⱫꝢ\",\n\ta:\"ⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑ\",\n\taa:\"ꜳ\",\n\tae:\"æǽǣ\",\n\tao:\"ꜵ\",\n\tau:\"ꜷ\",\n\tav:\"ꜹꜻ\",\n\tay:\"ꜽ\",\n\tb:\"ⓑｂḃḅḇƀƃɓƂ\",\n\tc:\"ｃⓒćĉċčçḉƈȼꜿↄ\",\n\td:\"ⓓｄḋďḍḑḓḏđƌɖɗƋᏧԁꞪ\",\n\tdh:\"ð\",\n\tdz:\"ǳǆ\",\n\te:\"ⓔｅèéêềếễểẽēḕḗĕėëẻěȅȇẹệȩḝęḙḛɇǝ\",\n\tf:\"ⓕｆḟƒ\",\n\tff:\"ﬀ\",\n\tfi:\"ﬁ\",\n\tfl:\"ﬂ\",\n\tffi:\"ﬃ\",\n\tffl:\"ﬄ\",\n\tg:\"ⓖｇǵĝḡğġǧģǥɠꞡꝿᵹ\",\n\th:\"ⓗｈĥḣḧȟḥḩḫẖħⱨⱶɥ\",\n\thv:\"ƕ\",\n\ti:\"ⓘｉìíîĩīĭïḯỉǐȉȋịįḭɨı\",\n\tj:\"ⓙｊĵǰɉ\",\n\tk:\"ⓚｋḱǩḳķḵƙⱪꝁꝃꝅꞣ\",\n\tl:\"ⓛｌŀĺľḷḹļḽḻſłƚɫⱡꝉꞁꝇɭ\",\n\tlj:\"ǉ\",\n\tm:\"ⓜｍḿṁṃɱɯ\",\n\tn:\"ⓝｎǹńñṅňṇņṋṉƞɲŉꞑꞥлԉ\",\n\tnj:\"ǌ\",\n\to:\"ⓞｏòóôồốỗổõṍȭṏōṑṓŏȯȱöȫỏőǒȍȏơờớỡởợọộǫǭøǿꝋꝍɵɔᴑ\",\n\toe:\"œ\",\n\toi:\"ƣ\",\n\too:\"ꝏ\",\n\tou:\"ȣ\",\n\tp:\"ⓟｐṕṗƥᵽꝑꝓꝕρ\",\n\tq:\"ⓠｑɋꝗꝙ\",\n\tr:\"ⓡｒŕṙřȑȓṛṝŗṟɍɽꝛꞧꞃ\",\n\ts:\"ⓢｓśṥŝṡšṧṣṩșşȿꞩꞅẛʂ\",\n\tss:\"ß\",\n\tt:\"ⓣｔṫẗťṭțţṱṯŧƭʈⱦꞇ\",\n\tth:\"þ\",\n\ttz:\"ꜩ\",\n\tu:\"ⓤｕùúûũṹūṻŭüǜǘǖǚủůűǔȕȗưừứữửựụṳųṷṵʉ\",\n\tv:\"ⓥｖṽṿʋꝟʌ\",\n\tvy:\"ꝡ\",\n\tw:\"ⓦｗẁẃŵẇẅẘẉⱳ\",\n\tx:\"ⓧｘẋẍ\",\n\ty:\"ⓨｙỳýŷỹȳẏÿỷẙỵƴɏỿ\",\n\tz:\"ⓩｚźẑżžẓẕƶȥɀⱬꝣ\"\n}\n\n/**\n * code points generated from toCodePoints();\n * removed 65339 to 65345\n */\nvar code_points = [\n\t[ 67, 67 ],\n\t[ 160, 160 ],\n\t[ 192, 438 ],\n\t[ 452, 652 ],\n\t[ 961, 961 ],\n\t[ 1019, 1019 ],\n\t[ 1083, 1083 ],\n\t[ 1281, 1289 ],\n\t[ 1984, 1984 ],\n\t[ 5095, 5095 ],\n\t[ 7429, 7441 ],\n\t[ 7545, 7549 ],\n\t[ 7680, 7935 ],\n\t[ 8580, 8580 ],\n\t[ 9398, 9449 ],\n\t[ 11360, 11391 ],\n\t[ 42792, 42793 ],\n\t[ 42802, 42851 ],\n\t[ 42873, 42897 ],\n\t[ 42912, 42922 ],\n\t[ 64256, 64260 ],\n\t[ 65313, 65338 ],\n\t[ 65345, 65370 ]\n];\n\n/**\n * Remove accents\n * via https://github.com/krisk/Fuse/issues/133#issuecomment-318692703\n *\n */\nexport const asciifold = (str:string):string => {\n\treturn str.normalize('NFD').replace(/[\\u0300-\\u036F]/g, '').normalize('NFKD').toLowerCase();\n};\n\n\n/**\n * Convert list of diacritics to array of code points\n *\n */\n// @ts-ignore\nfunction toCodePoints(tolerance=8){\n\tvar char_codes:number[] = [];\n\n\tfor( let letter in DIACRITICS ){\n\t\tlet _diacritics = DIACRITICS[letter];\n\t\tfor( let n = 0; n < _diacritics.length; n++ ){\n\t\t\tvar code_point = _diacritics.codePointAt(n);\n\t\t\tif( code_point ) char_codes.push( code_point );\n\t\t}\n\t}\n\n\t//https://stackoverflow.com/questions/40431572/is-there-a-simple-way-to-group-js-array-values-by-range\n\tchar_codes.sort((a, b) => a - b);\n\tvar accumulator: number[][] = [];\n    var result = char_codes.reduce(function (accumulator, currentValue, index, source) {\n\n\t\tif( !index ){\n\t\t\taccumulator.push( [currentValue,currentValue] );\n\n\t\t}else if( currentValue - source[index - 1] > tolerance ){\n\t\t\taccumulator.push( [currentValue,currentValue] );\n\n\t\t}else{\n\n\t\t\tlet range = accumulator.pop();\n\t\t\tif( range ){\n\t\t\t\taccumulator.push( [range[0],currentValue]);\n\t\t\t}\n\t\t}\n\n        return accumulator;\n    }, accumulator);\n\n\tconsole.log(`char_codes (${result.length})`,result);\n}\n\n/**\n * Generate a list of diacritics from the list of code points\n *\n */\nexport const generateDiacritics = ():TDiacraticList => {\n\n\tvar latin_convert:{[key:string]:string} = {\n\t\t'l·': 'l',\n\t\t'ʼn': 'n',\n\t\t'æ': 'ae',\n\t\t'ø': 'o',\n\t\t'aʾ': 'a',\n\t\t'dž': 'dz',\n\t};\n\n\tvar diacritics:{[key:string]:string} = {};\n\t//var no_latin\t= [];\n\tcode_points.forEach((code_range)=>{\n\n\t\tfor(let i = code_range[0]; i <= code_range[1]; i++){\n\t\t\tlet diacritic\t= String.fromCharCode(i);\n\t\t\tlet latin\t\t= diacritic.normalize('NFD').replace(/[\\u0300-\\u036F]/g, '').normalize('NFKD');\n\n\t\t\tif( latin == diacritic ){\n\t\t\t\t//no_latin.push(diacritic);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlatin = latin.toLowerCase();\n\n\t\t\tif( latin in latin_convert ){\n\t\t\t\tlatin = latin_convert[latin];\n\t\t\t}\n\n\t\t\tif( !(latin in diacritics) ){\n\t\t\t\tdiacritics[latin] = latin + latin.toUpperCase();\n\t\t\t}\n\t\t\tdiacritics[latin] += diacritic;\n\t\t}\n\t});\n\n\t//console.log('no_latin',JSON.stringify(no_latin));\n\n\treturn diacritics;\n}\n\n/**\n * Expand a regular expression pattern to include diacritics\n * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n *\n */\nvar diacritics:null|TDiacraticList = null\nexport const diacriticRegexPoints = (regex:string):string => {\n\n\tif( diacritics === null ){\n\t\tdiacritics = generateDiacritics();\n\t}\n\n\tfor( let latin in diacritics ){\n\t\tif( diacritics.hasOwnProperty(latin) ){\n\t\t\tregex = regex.replace( new RegExp(latin,'g'), '['+diacritics[latin]+']');\n\t\t}\n\t}\n\treturn regex;\n}\n\n\n/**\n * Expand a regular expression pattern to include diacritics\n * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n *\n * rollup will bundle this function (and the DIACRITICS constant) unless commented out\n *\nvar diacriticRegex = (function() {\n\n\tvar list = [];\n\tfor( let letter in DIACRITICS ){\n\n\t\tif( letter.toLowerCase() != letter && letter.toLowerCase() in DIACRITICS ){\n\t\t\tcontinue;\n\t\t}\n\n\t\tif( DIACRITICS.hasOwnProperty(letter) ){\n\n\t\t\tvar replace = letter + DIACRITICS[letter];\n\t\t\tif( letter.toUpperCase() in DIACRITICS ){\n\t\t\t\treplace += letter.toUpperCase() + DIACRITICS[letter.toUpperCase()];\n\t\t\t}\n\n\t\t\tlist.push({let:letter,pat:'['+replace+']'});\n\t\t}\n\t}\n\n\treturn function(regex:string):string{\n\t\tlist.forEach((item)=>{\n\t\t\tregex = regex.replace( new RegExp(item.let,'g'),item.pat);\n\t\t});\n\t\treturn regex;\n\t}\n})();\n*/\n","\n// @ts-ignore TS2691 \"An import path cannot end with a '.ts' extension\"\nimport { asciifold } from './diacritics.ts';\n\n// @ts-ignore TS2691 \"An import path cannot end with a '.ts' extension\"\nimport * as T from './types.ts';\n\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttr = (obj:{[key:string]:any}, name:string ) => {\n    if (!obj ) return;\n    return obj[name];\n};\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttrNesting = (obj:{[key:string]:any}, name:string ) => {\n    if (!obj ) return;\n    var part, names = name.split(\".\");\n\twhile( (part = names.shift()) && (obj = obj[part]));\n    return obj;\n};\n\n/**\n * Calculates how close of a match the\n * given value is against a search token.\n *\n */\nexport const scoreValue = (value:string, token:T.Token, weight:number ):number => {\n\tvar score, pos;\n\n\tif (!value) return 0;\n\n\tvalue = value + '';\n\tpos = value.search(token.regex);\n\tif (pos === -1) return 0;\n\n\tscore = token.string.length / value.length;\n\tif (pos === 0) score += 0.5;\n\n\treturn score * weight;\n};\n\nexport const escape_regex = (str:string):string => {\n\treturn (str + '').replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n};\n\n\n/**\n * Cast object property to an array if it exists and has a value\n *\n */\nexport const propToArray = (obj:{[key:string]:any}, key:string) => {\n\tvar value = obj[key];\n\tif( value && !Array.isArray(value) ){\n\t\tobj[key] = [value];\n\t}\n}\n\n\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\nexport const iterate = (object:[]|{[key:string]:any}, callback:(value:any,key:number|string)=>any) => {\n\n\tif ( Array.isArray(object)) {\n\t\tobject.forEach(callback);\n\n\t}else{\n\n\t\tfor (var key in object) {\n\t\t\tif (object.hasOwnProperty(key)) {\n\t\t\t\tcallback(object[key], key);\n\t\t\t}\n\t\t}\n\t}\n};\n\n\n\nexport const cmp = (a:number|string, b:number|string) => {\n\tif (typeof a === 'number' && typeof b === 'number') {\n\t\treturn a > b ? 1 : (a < b ? -1 : 0);\n\t}\n\ta = asciifold(a + '').toLowerCase();\n\tb = asciifold(b + '').toLowerCase();\n\tif (a > b) return 1;\n\tif (b > a) return -1;\n\treturn 0;\n};\n","/**\n * sifter.js\n * Copyright (c) 2013–2020 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\n // @ts-ignore TS2691 \"An import path cannot end with a '.ts' extension\"\nimport { scoreValue, getAttr, getAttrNesting, escape_regex, propToArray, iterate, cmp } from './utils.ts';\n// @ts-ignore TS2691 \"An import path cannot end with a '.ts' extension\"\nimport { diacriticRegexPoints, asciifold } from './diacritics.ts';\n// @ts-ignore TS2691 \"An import path cannot end with a '.ts' extension\"\nimport * as T from 'types.ts';\n\nexport default class Sifter{\n\n\tpublic items; // []|{};\n\tpublic settings: T.Settings;\n\n\t/**\n\t * Textually searches arrays and hashes of objects\n\t * by property (or multiple properties). Designed\n\t * specifically for autocomplete.\n\t *\n\t */\n\tconstructor(items:any, settings:T.Settings) {\n\t\tthis.items = items;\n\t\tthis.settings = settings || {diacritics: true};\n\t};\n\n\t/**\n\t * Splits a search string into an array of individual\n\t * regexps to be used to match results.\n\t *\n\t */\n\ttokenize(query:string, respect_word_boundaries?:boolean, weights?:T.Weights ):T.Token[] {\n\t\tif (!query || !query.length) return [];\n\n\t\tconst tokens:T.Token[]\t= [];\n\t\tconst words\t\t\t\t= query.split(/\\s+/);\n\t\tvar field_regex:RegExp;\n\n\t\tif( weights ){\n\t\t\tfield_regex = new RegExp( '^('+ Object.keys(weights).map(escape_regex).join('|')+')\\:(.*)$');\n\t\t}\n\n\t\twords.forEach((word:string) => {\n\t\t\tlet field_match;\n\t\t\tlet field:null|string\t= null;\n\t\t\tlet regex:null|string\t= null;\n\n\t\t\t// look for \"field:query\" tokens\n\t\t\tif( field_regex && (field_match = word.match(field_regex)) ){\n\t\t\t\tfield\t= field_match[1];\n\t\t\t\tword\t= field_match[2];\n\t\t\t}\n\n\t\t\tif( word.length > 0 ){\n\t\t\t\tregex = escape_regex(word);\n\t\t\t\tif( this.settings.diacritics ){\n\t\t\t\t\tregex = diacriticRegexPoints(regex);\n\t\t\t\t}\n\t\t\t\tif( respect_word_boundaries ) regex = \"\\\\b\"+regex;\n\t\t\t}\n\n\t\t\ttokens.push({\n\t\t\t\tstring : word,\n\t\t\t\tregex  : regex ? new RegExp(regex,'i') : null,\n\t\t\t\tfield  : field,\n\t\t\t});\n\t\t});\n\n\t\treturn tokens;\n\t};\n\n\n\t/**\n\t * Returns a function to be used to score individual results.\n\t *\n\t * Good matches will have a higher score than poor matches.\n\t * If an item is not a match, 0 will be returned by the function.\n\t *\n\t * @returns {function}\n\t */\n\tgetScoreFunction(query:string, options:T.Options ){\n\t\tvar search = this.prepareSearch(query, options);\n\t\treturn this._getScoreFunction(search);\n\t}\n\n\t_getScoreFunction(search:T.PrepareObj ){\n\t\tconst tokens\t\t= search.tokens,\n\t\ttoken_count\t\t\t= tokens.length;\n\n\t\tif (!token_count) {\n\t\t\treturn function() { return 0; };\n\t\t}\n\n\t\tconst fields\t= search.options.fields,\n\t\tweights\t\t\t= search.weights,\n\t\tfield_count\t\t= fields.length,\n\t\tgetAttrFn\t\t= search.getAttrFn;\n\n\t\tif (!field_count) {\n\t\t\treturn function() { return 1; };\n\t\t}\n\n\n\t\t/**\n\t\t * Calculates the score of an object\n\t\t * against the search query.\n\t\t *\n\t\t */\n\t\tconst scoreObject = (function() {\n\n\n\t\t\tif (field_count === 1) {\n\t\t\t\treturn function(token:T.Token, data:{}) {\n\t\t\t\t\tconst field = fields[0].field;\n\t\t\t\t\treturn scoreValue(getAttrFn(data, field), token, weights[field]);\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn function(token:T.Token, data:{}) {\n\t\t\t\tvar sum = 0;\n\n\t\t\t\t// is the token specific to a field?\n\t\t\t\tif( token.field ){\n\n\t\t\t\t\tconst value = getAttrFn(data, token.field);\n\n\t\t\t\t\tif( !token.regex && value ){\n\t\t\t\t\t\tsum += (1/field_count);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tsum += scoreValue(value, token, 1);\n\t\t\t\t\t}\n\n\n\n\t\t\t\t}else{\n\t\t\t\t\titerate(weights, (weight:number, field:string) => {\n\t\t\t\t\t\tsum += scoreValue(getAttrFn(data, field), token, weight);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn sum / field_count;\n\t\t\t};\n\t\t})();\n\n\t\tif (token_count === 1) {\n\t\t\treturn function(data:{}) {\n\t\t\t\treturn scoreObject(tokens[0], data);\n\t\t\t};\n\t\t}\n\n\t\tif (search.options.conjunction === 'and') {\n\t\t\treturn function(data:{}) {\n\t\t\t\tvar i = 0, score, sum = 0;\n\t\t\t\tfor (; i < token_count; i++) {\n\t\t\t\t\tscore = scoreObject(tokens[i], data);\n\t\t\t\t\tif (score <= 0) return 0;\n\t\t\t\t\tsum += score;\n\t\t\t\t}\n\t\t\t\treturn sum / token_count;\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(data:{}) {\n\t\t\t\tvar sum = 0;\n\t\t\t\titerate(tokens,(token:T.Token)=>{\n\t\t\t\t\tsum += scoreObject(token, data);\n\t\t\t\t});\n\t\t\t\treturn sum / token_count;\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n\t * Returns a function that can be used to compare two\n\t * results, for sorting purposes. If no sorting should\n\t * be performed, `null` will be returned.\n\t *\n\t * @return function(a,b)\n\t */\n\tgetSortFunction(query:string, options:T.Options) {\n\t\tvar search  = this.prepareSearch(query, options);\n\t\treturn this._getSortFunction(search);\n\t}\n\n\t_getSortFunction(search:T.PrepareObj){\n\t\tvar i, n, implicit_score;\n\n\t\tconst self\t= this,\n\t\toptions\t\t= search.options,\n\t\tsort\t\t= (!search.query && options.sort_empty) ? options.sort_empty : options.sort,\n\t\tsort_flds:T.Sort[]\t\t= [],\n\t\tmultipliers:number[]\t= [];\n\n\n\t\t/**\n\t\t * Fetches the specified sort field value\n\t\t * from a search result item.\n\t\t *\n\t\t */\n\t\tconst get_field = function(name:string, result:T.ResultItem):string|number {\n\t\t\tif (name === '$score') return result.score;\n\t\t\treturn search.getAttrFn(self.items[result.id], name);\n\t\t};\n\n\t\t// parse options\n\t\tif (sort) {\n\t\t\tfor (i = 0, n = sort.length; i < n; i++) {\n\t\t\t\tif (search.query || sort[i].field !== '$score') {\n\t\t\t\t\tsort_flds.push(sort[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// the \"$score\" field is implied to be the primary\n\t\t// sort field, unless it's manually specified\n\t\tif (search.query) {\n\t\t\timplicit_score = true;\n\t\t\tfor (i = 0, n = sort_flds.length; i < n; i++) {\n\t\t\t\tif (sort_flds[i].field === '$score') {\n\t\t\t\t\timplicit_score = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (implicit_score) {\n\t\t\t\tsort_flds.unshift({field: '$score', direction: 'desc'});\n\t\t\t}\n\t\t} else {\n\t\t\tfor (i = 0, n = sort_flds.length; i < n; i++) {\n\t\t\t\tif (sort_flds[i].field === '$score') {\n\t\t\t\t\tsort_flds.splice(i, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, n = sort_flds.length; i < n; i++) {\n\t\t\tmultipliers.push(sort_flds[i].direction === 'desc' ? -1 : 1);\n\t\t}\n\n\t\t// build function\n\t\tconst sort_flds_count = sort_flds.length;\n\t\tif (!sort_flds_count) {\n\t\t\treturn null;\n\t\t} else if (sort_flds_count === 1) {\n\t\t\tconst sort_fld = sort_flds[0].field;\n\t\t\tconst multiplier = multipliers[0];\n\t\t\treturn function(a:T.ResultItem, b:T.ResultItem) {\n\t\t\t\treturn multiplier * cmp(\n\t\t\t\t\tget_field(sort_fld, a),\n\t\t\t\t\tget_field(sort_fld, b)\n\t\t\t\t);\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(a:T.ResultItem, b:T.ResultItem) {\n\t\t\t\tvar i, result, field;\n\t\t\t\tfor (i = 0; i < sort_flds_count; i++) {\n\t\t\t\t\tfield = sort_flds[i].field;\n\t\t\t\t\tresult = multipliers[i] * cmp(\n\t\t\t\t\t\tget_field(field, a),\n\t\t\t\t\t\tget_field(field, b)\n\t\t\t\t\t);\n\t\t\t\t\tif (result) return result;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n\t * Parses a search query and returns an object\n\t * with tokens and fields ready to be populated\n\t * with results.\n\t *\n\t */\n\tprepareSearch(query:string, optsUser:T.Options):T.PrepareObj {\n\t\tconst weights:T.Weights = {};\n\t\tvar options\t\t= Object.assign({},optsUser);\n\n\t\tpropToArray(options,'sort');\n\t\tpropToArray(options,'sort_empty');\n\n\t\t// convert fields to new format\n\t\tif( options.fields ){\n\t\t\tpropToArray(options,'fields');\n\t\t\tconst fields:T.Field[] = [];\n\t\t\toptions.fields.forEach((field:string|T.Field) => {\n\t\t\t\tif( typeof field == 'string' ){\n\t\t\t\t\tfield = {field:field,weight:1};\n\t\t\t\t}\n\t\t\t\tfields.push(field);\n\t\t\t\tweights[field.field] = ('weight' in field) ? field.weight : 1;\n\t\t\t});\n\t\t\toptions.fields = fields;\n\t\t}\n\n\t\tquery = asciifold( query + '' ).toLowerCase().trim();\n\n\t\treturn {\n\t\t\toptions\t\t: options,\n\t\t\tquery\t\t: query,\n\t\t\ttokens\t\t: this.tokenize(query, options.respect_word_boundaries, weights),\n\t\t\ttotal\t\t: 0,\n\t\t\titems\t\t: [],\n\t\t\tweights\t\t: weights,\n\t\t\tgetAttrFn\t: (options.nesting) ? getAttrNesting : getAttr,\n\t\t};\n\t};\n\n\t/**\n\t * Searches through all items and returns a sorted array of matches.\n\t *\n\t */\n\tsearch(query:string, options:T.Options) : T.PrepareObj {\n\t\tvar self = this, score, search:T.PrepareObj;\n\n\t\tsearch  = this.prepareSearch(query, options);\n\t\toptions = search.options;\n\t\tquery   = search.query;\n\n\t\t// generate result scoring function\n\t\tconst fn_score = options.score || self._getScoreFunction(search);\n\n\t\t// perform search and sort\n\t\tif (query.length) {\n\t\t\titerate(self.items, (item:T.ResultItem, id:string|number) => {\n\t\t\t\tscore = fn_score(item);\n\t\t\t\tif (options.filter === false || score > 0) {\n\t\t\t\t\tsearch.items.push({'score': score, 'id': id});\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\titerate(self.items, (item:T.ResultItem, id:string|number) => {\n\t\t\t\tsearch.items.push({'score': 1, 'id': id});\n\t\t\t});\n\t\t}\n\n\t\tconst fn_sort = self._getSortFunction(search);\n\t\tif (fn_sort) search.items.sort(fn_sort);\n\n\t\t// apply limits\n\t\tsearch.total = search.items.length;\n\t\tif (typeof options.limit === 'number') {\n\t\t\tsearch.items = search.items.slice(0, options.limit);\n\t\t}\n\n\t\treturn search;\n\t};\n}\n","\n/**\n * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n *\n * param query should be {}\n */\nexport const getDom = ( query:any ):HTMLElement => {\n\n\tif( query.jquery ){\n\t\treturn query[0];\n\t}\n\n\tif( query instanceof HTMLElement ){\n\t\treturn query;\n\t}\n\n\tif( query.indexOf('<') > -1 ){\n\t\tlet div = document.createElement('div');\n\t\tdiv.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n\t\treturn div.firstChild as HTMLElement;\n\t}\n\n\treturn document.querySelector(query);\n};\n\nexport const escapeQuery = (query:string):string => {\n\treturn query.replace(/['\"\\\\]/g, '\\\\$&');\n}\n\n/**\n * Dispatch an event\n *\n */\nexport const triggerEvent = ( dom_el:HTMLElement, event_name:string ):void => {\n\tvar event = document.createEvent('HTMLEvents');\n\tevent.initEvent(event_name, true, false);\n\tdom_el.dispatchEvent(event)\n};\n\n/**\n * Apply CSS rules to a dom element\n *\n */\nexport const applyCSS = ( dom_el:HTMLElement, css:{ [key: string]: string|number }):void => {\n\tObject.assign(dom_el.style, css);\n}\n\n\n/**\n * Add css classes\n *\n */\nexport const addClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n\tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map( cls => {\n\t\t\tel.classList.add( cls );\n\t\t});\n\t});\n}\n\n/**\n * Remove css classes\n *\n */\n export const removeClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n \tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map(cls => {\n\t \t\tel.classList.remove( cls );\n\t\t});\n \t});\n }\n\n\n/**\n * Return arguments\n *\n */\nexport const classesArray = (args:string[]|string[][]):string[] => {\n\tvar classes:string[] = [];\n\tfor( let _classes of args ){\n\t\tif( typeof _classes === 'string' ){\n\t\t\t_classes = _classes.trim().split(/[\\11\\12\\14\\15\\40]/);\n\t\t}\n\t\tif( Array.isArray(_classes) ){\n\t\t\tclasses = classes.concat(_classes);\n\t\t}\n\t}\n\n\treturn classes.filter(Boolean);\n}\n\n\n/**\n * Create an array from arg if it's not already an array\n *\n */\nexport const castAsArray = (arg:any):Array<any> => {\n\tif( !Array.isArray(arg) ){\n \t\targ = [arg];\n \t}\n\treturn arg;\n}\n\n\n/**\n * Get the closest node to the evt.target matching the selector\n * Stops at wrapper\n *\n */\nexport const parentMatch = ( target:null|HTMLElement, selector:string, wrapper?:HTMLElement ):HTMLElement|void => {\n\n\tif( wrapper && !wrapper.contains(target) ){\n\t\treturn;\n\t}\n\n\twhile( target && target.matches ){\n\n\t\tif( target.matches(selector) ){\n\t\t\treturn target;\n\t\t}\n\n\t\ttarget = target.parentNode as HTMLElement;\n\t}\n}\n\n\n/**\n * Get the first or last item from an array\n *\n * > 0 - right (last)\n * <= 0 - left (first)\n *\n */\nexport const getTail = ( list:Array<any>|NodeList, direction:number=0 ):any => {\n\n\tif( direction > 0 ){\n\t\treturn list[list.length-1];\n\t}\n\n\treturn list[0];\n}\n\n/**\n * Return true if an object is empty\n *\n */\nexport const isEmptyObject = (obj:object):boolean => {\n\treturn (Object.keys(obj).length === 0);\n}\n\n\n/**\n * Get the index of an element amongst sibling nodes of the same type\n *\n */\nexport const nodeIndex = ( el:null|Element, amongst?:string ):number => {\n\tif (!el) return -1;\n\n\tamongst = amongst || el.nodeName;\n\n\tvar i = 0;\n\twhile( el = el.previousElementSibling ){\n\n\t\tif( el.matches(amongst) ){\n\t\t\ti++;\n\t\t}\n\t}\n\treturn i;\n}\n\n\n/**\n * Set attributes of an element\n *\n */\nexport const setAttr = (el:Element,attrs:{ [key: string]: null|string|number }) => {\n\tfor( const attr in attrs ){\n\t\tlet val = attrs[attr];\n\t\tif( val == null ){\n\t\t\tel.removeAttribute(attr);\n\t\t}else{\n\t\t\tel.setAttribute(attr, ''+val);\n\t\t}\n\t}\n}\n\n\n/**\n * Replace a node\n */\nexport const replaceNode = ( existing:Node, replacement:Node ) => {\n\tif( existing.parentNode ) existing.parentNode.replaceChild(replacement, existing);\n}\n","/**\n * highlight v3 | MIT license | Johann Burkard <jb@eaio.com>\n * Highlights arbitrary terms in a node.\n *\n * - Modified by Marshal <beatgates@gmail.com> 2011-6-24 (added regex)\n * - Modified by Brian Reavis <brian@thirdroute.com> 2012-8-27 (cleanup)\n */\n\nimport {replaceNode} from '../vanilla';\n\n\nexport const highlight = (element:HTMLElement, regex:string|RegExp) => {\n\n\tif( regex === null ) return;\n\n\t// convet string to regex\n\tif( typeof regex === 'string' ){\n\n\t\tif( !regex.length ) return;\n\t\tregex = new RegExp(regex, 'i');\n\t}\n\n\n\t// Wrap matching part of text node with highlighting <span>, e.g.\n\t// Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n\tconst highlightText = ( node:Text ):number => {\n\n\t\tvar match = node.data.match(regex);\n\t\tif( match && node.data.length > 0 ){\n\t\t\tvar spannode\t\t= document.createElement('span');\n\t\t\tspannode.className\t= 'highlight';\n\t\t\tvar middlebit\t\t= node.splitText(match.index as number);\n\n\t\t\tmiddlebit.splitText(match[0].length);\n\t\t\tvar middleclone\t\t= middlebit.cloneNode(true);\n\n\t\t\tspannode.appendChild(middleclone);\n\t\t\treplaceNode(middlebit, spannode);\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn 0;\n\t};\n\n\t// Recurse element node, looking for child text nodes to highlight, unless element\n\t// is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n\tconst highlightChildren = ( node:Element ):void => {\n\t\tif( node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && ( node.className !== 'highlight' || node.tagName !== 'SPAN' ) ){\n\t\t\tfor (var i = 0; i < node.childNodes.length; ++i) {\n\t\t\t\ti += highlightRecursive(node.childNodes[i]);\n\t\t\t}\n\t\t}\n\t};\n\n\n\tconst highlightRecursive = ( node:Node|Element ):number => {\n\n\t\tif( node.nodeType === 3 ){\n\t\t\treturn highlightText(node as Text);\n\t\t}\n\n\t\thighlightChildren(node as Element);\n\n\t\treturn 0;\n\t};\n\n\thighlightRecursive( element );\n};\n\n/**\n * removeHighlight fn copied from highlight v5 and\n * edited to remove with(), pass js strict mode, and use without jquery\n */\nexport const removeHighlight = (el:HTMLElement) => {\n\tvar elements = el.querySelectorAll(\"span.highlight\");\n\tArray.prototype.forEach.call(elements, function(el:HTMLElement){\n\t\tvar parent = el.parentNode as Node;\n\t\tparent.replaceChild(el.firstChild as Node, el);\n\t\tparent.normalize();\n\t});\n};\n","export const KEY_A\t\t\t\t= 65;\nexport const KEY_RETURN\t\t\t= 13;\nexport const KEY_ESC\t\t\t= 27;\nexport const KEY_LEFT\t\t\t= 37;\nexport const KEY_UP\t\t\t\t= 38;\nexport const KEY_RIGHT\t\t\t= 39;\nexport const KEY_DOWN\t\t\t= 40;\nexport const KEY_BACKSPACE\t\t= 8;\nexport const KEY_DELETE\t\t\t= 46;\nexport const KEY_TAB\t\t\t= 9;\n\nexport const IS_MAC      \t\t= typeof navigator === 'undefined' ? false : /Mac/.test(navigator.userAgent);\nexport const KEY_SHORTCUT\t\t= IS_MAC ? 'metaKey' : 'ctrlKey'; // ctrl key or apple key for ma\n","\nexport default {\n\toptions: [],\n\toptgroups: [],\n\n\tplugins: [],\n\tdelimiter: ',',\n\tsplitOn: null, // regexp or string for splitting up values from a paste command\n\tpersist: true,\n\tdiacritics: true,\n\tcreate: null,\n\tcreateOnBlur: false,\n\tcreateFilter: null,\n\thighlight: true,\n\topenOnFocus: true,\n\tshouldOpen: null,\n\tmaxOptions: 50,\n\tmaxItems: null,\n\thideSelected: null,\n\tduplicates: false,\n\taddPrecedence: false,\n\tselectOnTab: false,\n\tpreload: null,\n\tallowEmptyOption: false,\n\tcloseAfterSelect: false,\n\n\tloadThrottle: 300,\n\tloadingClass: 'loading',\n\n\tdataAttr: null, //'data-data',\n\toptgroupField: 'optgroup',\n\tvalueField: 'value',\n\tlabelField: 'text',\n\tdisabledField: 'disabled',\n\toptgroupLabelField: 'label',\n\toptgroupValueField: 'value',\n\tlockOptgroupOrder: false,\n\n\tsortField: '$order',\n\tsearchField: ['text'],\n\tsearchConjunction: 'and',\n\n\tmode: null,\n\twrapperClass: 'ts-control',\n\tinputClass: 'ts-input',\n\tdropdownClass: 'ts-dropdown',\n\tdropdownContentClass: 'ts-dropdown-content',\n\titemClass: 'item',\n\toptionClass: 'option',\n\n\tdropdownParent: null,\n\tcontrolInput: null,\n\n\tcopyClassesToDropdown: true,\n\n\tplaceholder: null,\n\thidePlaceholder: null,\n\n\tshouldLoad: function(query:string):boolean{\n\t\treturn query.length > 0;\n\t},\n\n\t/*\n\tload                 : null, // function(query, callback) { ... }\n\tscore                : null, // function(search) { ... }\n\tonInitialize         : null, // function() { ... }\n\tonChange             : null, // function(value) { ... }\n\tonItemAdd            : null, // function(value, $item) { ... }\n\tonItemRemove         : null, // function(value) { ... }\n\tonClear              : null, // function() { ... }\n\tonOptionAdd          : null, // function(value, data) { ... }\n\tonOptionRemove       : null, // function(value) { ... }\n\tonOptionClear        : null, // function() { ... }\n\tonOptionGroupAdd     : null, // function(id, data) { ... }\n\tonOptionGroupRemove  : null, // function(id) { ... }\n\tonOptionGroupClear   : null, // function() { ... }\n\tonDropdownOpen       : null, // function(dropdown) { ... }\n\tonDropdownClose      : null, // function(dropdown) { ... }\n\tonType               : null, // function(str) { ... }\n\tonDelete             : null, // function(values) { ... }\n\t*/\n\n\trender: {\n\t\t/*\n\t\titem: null,\n\t\toptgroup: null,\n\t\toptgroup_header: null,\n\t\toption: null,\n\t\toption_create: null\n\t\t*/\n\t}\n};\n","\nimport TomSelect from './tom-select';\nimport { TomLoadCallback } from './types/index';\n\n\n/**\n * Converts a scalar to its best string representation\n * for hash keys and HTML attribute values.\n *\n * Transformations:\n *   'str'     -> 'str'\n *   null      -> ''\n *   undefined -> ''\n *   true      -> '1'\n *   false     -> '0'\n *   0         -> '0'\n *   1         -> '1'\n *\n */\nexport const hash_key = (value:undefined|null|boolean|string):string|null => {\n\tif (typeof value === 'undefined' || value === null) return null;\n\treturn get_hash(value);\n};\n\nexport const get_hash = (value:boolean|string):string => {\n\tif (typeof value === 'boolean') return value ? '1' : '0';\n\treturn value + '';\n};\n\n/**\n * Escapes a string for use within HTML.\n *\n */\nexport const escape_html = (str:string):string => {\n\treturn (str + '')\n\t\t.replace(/&/g, '&amp;')\n\t\t.replace(/</g, '&lt;')\n\t\t.replace(/>/g, '&gt;')\n\t\t.replace(/\"/g, '&quot;');\n};\n\n\n/**\n * Debounce the user provided load function\n *\n */\nexport const loadDebounce = (fn:(value:string,callback:TomLoadCallback) => void,delay:number) => {\n\tvar timeout: null|ReturnType<typeof setTimeout>;\n\treturn function(this:TomSelect, value:string,callback:TomLoadCallback) {\n\t\tvar self = this;\n\n\t\tif( timeout ){\n\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t\tclearTimeout(timeout);\n\t\t}\n\t\ttimeout = setTimeout(function() {\n\t\t\ttimeout = null;\n\t\t\tself.loadedSearches[value] = true;\n\t\t\tfn.call(self, value, callback);\n\n\t\t}, delay);\n\t};\n};\n\n\n/**\n * Debounce all fired events types listed in `types`\n * while executing the provided `fn`.\n *\n */\nexport const debounce_events = ( self:TomSelect, types:string[], fn:() => void ) => {\n\tvar type:string;\n\tvar trigger = self.trigger;\n\tvar event_args:{ [key: string]: any } = {};\n\n\t// override trigger method\n\tself.trigger = function(){\n\t\tvar type = arguments[0];\n\t\tif (types.indexOf(type) !== -1) {\n\t\t\tevent_args[type] = arguments;\n\t\t} else {\n\t\t\treturn trigger.apply(self, arguments);\n\t\t}\n\t};\n\n\t// invoke provided function\n\tfn.apply(self, []);\n\tself.trigger = trigger;\n\n\t// trigger queued events\n\tfor (type in event_args) {\n\t\ttrigger.apply(self, event_args[type]);\n\t}\n};\n\n\n/**\n * Determines the current selection within a text input control.\n * Returns an object containing:\n *   - start\n *   - length\n *\n */\nexport const getSelection = (input:HTMLInputElement):{ start: number; length: number } => {\n\treturn {\n\t\tstart\t: input.selectionStart || 0,\n\t\tlength\t: (input.selectionEnd||0) - (input.selectionStart||0),\n\t};\n};\n\n\n/**\n * Prevent default\n *\n */\nexport const preventDefault = (evt?:Event, stop:boolean=false):void => {\n\tif( evt ){\n\t\tevt.preventDefault();\n\t\tif( stop ){\n\t\t\tevt.stopPropagation();\n\t\t}\n\t}\n}\n\n\n/**\n * Prevent default\n *\n */\nexport const addEvent = (target:EventTarget, type:string, callback:EventListenerOrEventListenerObject, options?:object):void => {\n\ttarget.addEventListener(type,callback,options);\n};\n\n\n/**\n * Return true if the requested key is down\n * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n * The current evt may not always set ( eg calling advanceSelection() )\n *\n */\nexport const isKeyDown = ( key_name:keyof (KeyboardEvent|MouseEvent), evt?:KeyboardEvent|MouseEvent ) => {\n\n\tif( !evt ){\n\t\treturn false;\n\t}\n\n\tif( !evt[key_name] ){\n\t\treturn false;\n\t}\n\n\tvar count = (evt.altKey?1:0) + (evt.ctrlKey?1:0) + (evt.shiftKey?1:0) + (evt.metaKey?1:0);\n\n\tif( count === 1 ){\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n\n/**\n * Get the id of an element\n * If the id attribute is not set, set the attribute with the given id\n *\n */\nexport const getId = (el:Element,id:string) => {\n\tconst existing_id = el.getAttribute('id');\n\tif( existing_id ){\n\t\treturn existing_id;\n\t}\n\n\tel.setAttribute('id',id);\n\treturn id;\n};\n\n\n/**\n * Returns a string with backslashes added before characters that need to be escaped.\n */\nexport const addSlashes = (str:string):string => {\n\treturn str.replace(/[\\\\\"']/g, '\\\\$&');\n};\n\n/**\n *\n */\nexport const append = ( parent:Element|DocumentFragment, node: string|Node|null|undefined ):void =>{\n\tif( node ) parent.append(node);\n};\n","import defaults from './defaults.js';\nimport { hash_key } from './utils';\nimport { TomOption, TomSettings } from './types/index';\n\nexport default function getSettings( input:HTMLInputElement, settings_user:TomSettings):TomSettings{\n\tvar settings:TomSettings\t= Object.assign({}, defaults, settings_user);\n\n\tvar attr_data\t\t\t\t= settings.dataAttr;\n\tvar field_label\t\t\t\t= settings.labelField;\n\tvar field_value\t\t\t\t= settings.valueField;\n\tvar field_disabled\t\t\t= settings.disabledField;\n\tvar field_optgroup\t\t\t= settings.optgroupField;\n\tvar field_optgroup_label\t= settings.optgroupLabelField;\n\tvar field_optgroup_value\t= settings.optgroupValueField;\n\n\tvar tag_name\t\t\t\t= input.tagName.toLowerCase();\n\tvar placeholder\t\t\t\t= input.getAttribute('placeholder') || input.getAttribute('data-placeholder');\n\n\tif (!placeholder && !settings.allowEmptyOption) {\n\t\tlet option\t\t= input.querySelector('option[value=\"\"]');\n\t\tif( option ){\n\t\t\tplaceholder = option.textContent;\n\t\t}\n\n\t}\n\n\tvar settings_element:{\n\t\tplaceholder\t: null|string,\n\t\toptions\t\t: TomOption[],\n\t\toptgroups\t: TomOption[],\n\t\titems\t\t: string[],\n\t\tmaxItems\t: null|number,\n\t} = {\n\t\tplaceholder\t: placeholder,\n\t\toptions\t\t: [],\n\t\toptgroups\t: [],\n\t\titems\t\t: [],\n\t\tmaxItems\t: null,\n\t};\n\n\n\t/**\n\t * Initialize from a <select> element.\n\t *\n\t */\n\tvar init_select = () => {\n\t\tvar tagName;\n\t\tvar options = settings_element.options;\n\t\tvar optionsMap:{[key:string]:any} = {};\n\t\tvar group_count = 1;\n\n\t\tvar readData = (el:HTMLElement):TomOption => {\n\n\t\t\tvar data\t= Object.assign({},el.dataset); // get plain object from DOMStringMap\n\t\t\tvar json\t= attr_data && data[attr_data];\n\n\t\t\tif( typeof json === 'string' && json.length ){\n\t\t\t\tdata = Object.assign(data,JSON.parse(json));\n\t\t\t}\n\n\t\t\treturn data;\n\t\t};\n\n\t\tvar addOption = (option:HTMLOptionElement, group?:string) => {\n\n\t\t\tvar value = hash_key(option.value);\n\t\t\tif ( value == null ) return;\n\t\t\tif ( !value && !settings.allowEmptyOption) return;\n\n\t\t\t// if the option already exists, it's probably been\n\t\t\t// duplicated in another optgroup. in this case, push\n\t\t\t// the current group to the \"optgroup\" property on the\n\t\t\t// existing option so that it's rendered in both places.\n\t\t\tif (optionsMap.hasOwnProperty(value)) {\n\t\t\t\tif (group) {\n\t\t\t\t\tvar arr = optionsMap[value][field_optgroup];\n\t\t\t\t\tif (!arr) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = group;\n\t\t\t\t\t} else if (!Array.isArray(arr)) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = [arr, group];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tarr.push(group);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}else{\n\n\t\t\t\tvar option_data             = readData(option);\n\t\t\t\toption_data[field_label]    = option_data[field_label] || option.textContent;\n\t\t\t\toption_data[field_value]    = option_data[field_value] || value;\n\t\t\t\toption_data[field_disabled] = option_data[field_disabled] || option.disabled;\n\t\t\t\toption_data[field_optgroup] = option_data[field_optgroup] || group;\n\t\t\t\toption_data.$option\t\t\t= option;\n\n\t\t\t\toptionsMap[value] = option_data;\n\t\t\t\toptions.push(option_data);\n\t\t\t}\n\n\t\t\tif( option.selected ){\n\t\t\t\tsettings_element.items.push(value);\n\t\t\t}\n\t\t};\n\n\t\tvar addGroup = ( optgroup:HTMLOptGroupElement ) => {\n\t\t\tvar id, optgroup_data\n\n\t\t\toptgroup_data\t\t\t\t\t\t\t= readData(optgroup);\n\t\t\toptgroup_data[field_optgroup_label]\t\t= optgroup_data[field_optgroup_label] || optgroup.getAttribute('label') || '';\n\t\t\toptgroup_data[field_optgroup_value]\t\t= optgroup_data[field_optgroup_value] || group_count++;\n\t\t\toptgroup_data[field_disabled]\t\t\t= optgroup_data[field_disabled] || optgroup.disabled;\n\t\t\tsettings_element.optgroups.push(optgroup_data);\n\n\t\t\tid = optgroup_data[field_optgroup_value];\n\n\t\t\tfor( const option of optgroup.children ){\n\t\t\t\taddOption(option as HTMLOptionElement, id);\n\t\t\t}\n\n\t\t};\n\n\t\tsettings_element.maxItems = input.hasAttribute('multiple') ? null : 1;\n\n\t\tfor( const child of input.children ){\n\t\t\ttagName = child.tagName.toLowerCase();\n\t\t\tif (tagName === 'optgroup') {\n\t\t\t\taddGroup(child as HTMLOptGroupElement);\n\t\t\t} else if (tagName === 'option') {\n\t\t\t\taddOption(child as HTMLOptionElement);\n\t\t\t}\n\t\t}\n\n\t};\n\n\n\t/**\n\t * Initialize from a <input type=\"text\"> element.\n\t *\n\t */\n\tvar init_textbox = () => {\n\t\tconst data_raw = input.getAttribute(attr_data);\n\n\t\tif (!data_raw) {\n\t\t\tvar value = input.value.trim() || '';\n\t\t\tif (!settings.allowEmptyOption && !value.length) return;\n\t\t\tconst values = value.split(settings.delimiter);\n\n\t\t\tfor( const value of values ){\n\t\t\t\tconst option:TomOption = {};\n\t\t\t\toption[field_label] = value;\n\t\t\t\toption[field_value] = value;\n\t\t\t\tsettings_element.options.push(option);\n\t\t\t}\n\t\t\tsettings_element.items = values;\n\t\t} else {\n\t\t\tsettings_element.options = JSON.parse(data_raw);\n\t\t\tfor( const opt of settings_element.options ){\n\t\t\t\tsettings_element.items.push(opt[field_value]);\n\t\t\t}\n\t\t}\n\t};\n\n\n\tif (tag_name === 'select') {\n\t\tinit_select();\n\t} else {\n\t\tinit_textbox();\n\t}\n\n\treturn Object.assign( {}, defaults, settings_element, settings_user) as TomSettings;\n};\n","\nimport MicroEvent from './contrib/microevent.js';\nimport MicroPlugin from './contrib/microplugin.js';\nimport Sifter from '@orchidjs/sifter/lib/sifter';\nimport { escape_regex } from '@orchidjs/sifter/lib/utils';\nimport { TomInput, TomArgObject, TomOption, TomOptions, TomCreateFilter, TomCreateCallback, TomItem, TomSettings, TomTemplateNames } from './types/index';\nimport {highlight, removeHighlight} from './contrib/highlight.js';\nimport * as constants from './constants.js';\nimport getSettings from './getSettings.js';\nimport {\n\thash_key,\n\tget_hash,\n\tescape_html,\n\tdebounce_events,\n\tgetSelection,\n\tpreventDefault,\n\taddEvent,\n\tloadDebounce,\n\tisKeyDown,\n\tgetId,\n\taddSlashes,\n\tappend\n} from './utils';\n\nimport {\n\tgetDom,\n\tescapeQuery,\n\ttriggerEvent,\n\tapplyCSS,\n\taddClasses,\n\tremoveClasses,\n\tparentMatch,\n\tgetTail,\n\tisEmptyObject,\n\tnodeIndex,\n\tsetAttr,\n\treplaceNode\n} from './vanilla';\n\nvar instance_i = 0;\n\nexport default class TomSelect extends MicroPlugin(MicroEvent){\n\n\tpublic control_input\t\t\t: HTMLInputElement;\n\tpublic wrapper\t\t\t\t\t: HTMLElement;\n\tpublic dropdown\t\t\t\t\t: HTMLElement;\n\tpublic control\t\t\t\t\t: HTMLElement;\n\tpublic dropdown_content\t\t\t: HTMLElement;\n\n\tpublic order\t\t\t\t\t: number = 0;\n\tpublic settings\t\t\t\t\t: TomSettings;\n\tpublic input\t\t\t\t\t: TomInput;\n\tpublic tabIndex\t\t\t\t\t: number;\n\tpublic is_select_tag\t\t\t: boolean;\n\tpublic rtl\t\t\t\t\t\t: boolean;\n\tprivate inputId\t\t\t\t\t: string;\n\n\tprivate _destroy\t\t\t\t: () => void;\n\tpublic sifter\t\t\t\t\t: Sifter;\n\n\n\tpublic tab_key\t\t\t\t\t: boolean = false;\n\tpublic isOpen\t\t\t\t\t: boolean = false;\n\tpublic isDisabled\t\t\t\t: boolean = false;\n\tpublic isRequired\t\t\t\t: boolean;\n\tpublic isInvalid\t\t\t\t: boolean = false;\n\tpublic isLocked\t\t\t\t\t: boolean = false;\n\tpublic isFocused\t\t\t\t: boolean = false;\n\tpublic isInputHidden\t\t\t: boolean = false;\n\tpublic isSetup\t\t\t\t\t: boolean = false;\n\tpublic ignoreFocus\t\t\t\t: boolean = false;\n\tpublic hasOptions\t\t\t\t: boolean = false;\n\tpublic currentResults\t\t\t?: ReturnType<Sifter['search']>;\n\tpublic lastValue\t\t\t\t: string = '';\n\tpublic caretPos\t\t\t\t\t: number = 0;\n\tpublic loading\t\t\t\t\t: number = 0;\n\tpublic loadedSearches\t\t\t: { [key: string]: boolean } = {};\n\n\tpublic activeOption\t\t\t\t: null|HTMLElement = null;\n\tpublic activeItems\t\t\t\t: TomItem[] = [];\n\n\tpublic optgroups\t\t\t\t: TomOptions = {};\n\tpublic options\t\t\t\t\t: TomOptions = {};\n\tpublic userOptions\t\t\t\t: {[key:string]:boolean} = {};\n\tpublic items\t\t\t\t\t: string[] = [];\n\tpublic renderCache\t\t\t\t: {[key:string]:{[key:string]:HTMLElement}} = {'item':{},'option':{}};\n\n\n\n\tconstructor( input_arg: string|TomInput, settings:TomSettings ){\n\t\tsuper();\n\n\t\tinstance_i++;\n\n\t\tvar dir;\n\t\tvar input\t\t\t\t= getDom( input_arg ) as TomInput;\n\t\tvar self\t\t\t\t= this;\n\n\t\tif( input.tomselect ){\n\t\t\tthrow new Error('Tom Select already initialized on this element');\n\t\t}\n\n\n\t\tinput.tomselect\t\t\t= this;\n\n\n\t\t// detect rtl environment\n\t\tvar computedStyle\t\t= window.getComputedStyle && window.getComputedStyle(input, null);\n\t\tdir\t\t\t\t\t\t= computedStyle.getPropertyValue('direction');\n\n\t\t// setup default state\n\t\tthis.settings\t\t\t= getSettings( input, settings );\n\t\tthis.input\t\t\t\t= input;\n\t\tthis.tabIndex\t\t\t= input.tabIndex || 0;\n\t\tthis.is_select_tag\t\t= input.tagName.toLowerCase() === 'select';\n\t\tthis.rtl\t\t\t\t= /rtl/i.test(dir);\n\t\tthis.inputId\t\t\t= getId(input, 'tomselect-'+instance_i);\n\t\tthis.isRequired\t\t\t= input.required;\n\n\n\t\t// search system\n\t\tthis.sifter = new Sifter(this.options, {diacritics: this.settings.diacritics});\n\n\t\tthis.setupOptions(this.settings.options,this.settings.optgroups);\n\t\tdelete this.settings.optgroups;\n\t\tdelete this.settings.options;\n\n\n\t\t// option-dependent defaults\n\t\tthis.settings.mode = this.settings.mode || (this.settings.maxItems === 1 ? 'single' : 'multi');\n\t\tif (typeof this.settings.hideSelected !== 'boolean') {\n\t\t\tthis.settings.hideSelected = this.settings.mode === 'multi';\n\t\t}\n\n\t\tif( typeof this.settings.hidePlaceholder !== 'boolean' ){\n\t\t\tthis.settings.hidePlaceholder = this.settings.mode !== 'multi';\n\t\t}\n\n\t\t// set up createFilter callback\n\t\tvar filter = this.settings.createFilter;\n\t\tif( typeof filter !== 'function' ){\n\n\t\t\tif( typeof filter === 'string' ){\n\t\t\t\tfilter = new RegExp(filter);\n\t\t\t}\n\n\t\t\tif( filter instanceof RegExp ){\n\t\t\t\tthis.settings.createFilter = (input) => (filter as RegExp).test(input);\n\t\t\t}else{\n\t\t\t\tthis.settings.createFilter = () => true;\n\t\t\t}\n\t\t}\n\n\n\t\tthis.initializePlugins(this.settings.plugins);\n\t\tthis.setupCallbacks();\n\t\tthis.setupTemplates();\n\n\n\t\t/**\n\t\t * Create all elements and set up event bindings.\n\t\t *\n\t\t */\n\n\t\tvar settings:TomSettings = self.settings;\n\t\tvar wrapper: HTMLElement;\n\t\tvar control: HTMLElement;\n\t\tvar control_input: HTMLInputElement;\n\t\tvar dropdown: HTMLElement;\n\t\tvar dropdown_content: HTMLElement;\n\t\tvar inputMode: string;\n\t\tvar classes;\n\t\tvar classes_plugins;\n\t\tvar input\t\t\t\t\t= self.input;\n\t\tvar control_id: string;\n\t\tconst passive_event\t\t\t= { passive: true };\n\t\tconst listboxId: string\t\t= self.inputId +'-ts-dropdown';\n\n\n\n\t\tinputMode\t\t\t= self.settings.mode;\n\t\tclasses\t\t\t\t= input.getAttribute('class') || '';\n\n\t\twrapper\t\t\t\t= getDom('<div>');\n\t\taddClasses( wrapper, settings.wrapperClass, classes, inputMode);\n\n\n\t\tcontrol\t\t\t\t= getDom('<div class=\"items\">');\n\t\taddClasses(control,settings.inputClass);\n\t\tappend( wrapper, control );\n\n\n\t\tdropdown\t\t\t= self._render('dropdown');\n\t\taddClasses(dropdown, settings.dropdownClass, inputMode);\n\n\t\tdropdown_content\t= getDom(`<div role=\"listbox\" id=\"${listboxId}\" tabindex=\"-1\">`);\n\t\taddClasses(dropdown_content, settings.dropdownContentClass);\n\t\tappend( dropdown, dropdown_content );\n\n\t\tgetDom( settings.dropdownParent || wrapper ).appendChild( dropdown );\n\n\t\tif( settings.controlInput ){\n\t\t\tcontrol_input\t\t= getDom( settings.controlInput ) as HTMLInputElement;\n\t\t}else{\n\t\t\tcontrol_input\t\t= getDom('<input type=\"text\" autocomplete=\"off\" size=\"1\" />' ) as HTMLInputElement;\n\n\t\t\t// set attributes\n\t\t\tvar attrs = ['autocorrect','autocapitalize','autocomplete'];\n\t\t\tfor( const attr of attrs ){\n\t\t\t\tif( input.getAttribute(attr) ){\n\t\t\t\t\tsetAttr(control_input,{[attr]:input.getAttribute(attr)});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( !settings.controlInput ){\n\t\t\tcontrol_input.tabIndex = input.disabled ? -1 : self.tabIndex;\n\t\t\tcontrol.appendChild( control_input );\n\t\t}\n\n\n\t\tsetAttr(control_input,{\n\t\t\trole:'combobox',\n\t\t\thaspopup:'listbox',\n\t\t\t'aria-expanded':'false',\n\t\t\t'aria-controls':listboxId\n\t\t});\n\n\t\tcontrol_id = getId(control_input,self.inputId + '-tomselected');\n\n\t\tlet query = \"label[for='\"+escapeQuery(self.inputId)+\"']\";\n\t\tlet label = document.querySelector(query);\n\t\tif( label ){\n\t\t\tsetAttr(label,{for:control_id});\n\t\t\tlet label_id = getId(label,self.inputId+'-ts-label');\n\t\t\tsetAttr(dropdown_content,{'aria-labelledby':label_id});\n\t\t}\n\n\n\t\tif(self.settings.copyClassesToDropdown) {\n\t\t\taddClasses( dropdown, classes);\n\t\t}\n\n\t\twrapper.style.width = input.style.width;\n\n\t\tif (self.plugins.names.length) {\n\t\t\tclasses_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t\t\taddClasses( [wrapper,dropdown], classes_plugins);\n\t\t}\n\n\t\tif ((settings.maxItems === null || settings.maxItems > 1) && self.is_select_tag ){\n\t\t\tsetAttr(input,{multiple:'multiple'});\n\t\t}\n\n\t\tif (self.settings.placeholder) {\n\t\t\tsetAttr(control_input,{placeholder:settings.placeholder});\n\t\t}\n\n\t\t// if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\t\tif (!self.settings.splitOn && self.settings.delimiter) {\n\t\t\tself.settings.splitOn = new RegExp('\\\\s*' + escape_regex(self.settings.delimiter) + '+\\\\s*');\n\t\t}\n\n\t\t// debounce user defined load() if loadThrottle > 0\n\t\t// after initializePlugins() so plugins can create/modify user defined loaders\n\t\tif( this.settings.load && this.settings.loadThrottle ){\n\t\t\tthis.settings.load = loadDebounce(this.settings.load,this.settings.loadThrottle)\n\t\t}\n\n\n\t\tthis.control\t\t\t= control;\n\t\tthis.control_input\t\t= control_input;\n\t\tthis.wrapper\t\t\t= wrapper;\n\t\tthis.dropdown\t\t\t= dropdown;\n\t\tthis.dropdown_content\t= dropdown_content;\n\n\t\tself.control_input.type\t= input.type;\n\n\t\t// clicking on an option should select it\n\t\taddEvent(dropdown,'click',(evt) => {\n\t\t\tconst option = parentMatch(evt.target as HTMLElement, '[data-selectable]');\n\t\t\tif( option ){\n\t\t\t\tself.onOptionSelect( evt as MouseEvent, option );\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t}\n\t\t});\n\n\t\taddEvent(control,'click', (evt) => {\n\n\t\t\tvar target_match = parentMatch( evt.target as HTMLElement, '.'+self.settings.itemClass, control);\n\t\t\tif( target_match && self.onItemSelect(evt as MouseEvent, target_match as TomItem) ){\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// retain focus (see control_input mousedown)\n\t\t\tif( control_input.value != '' ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tself.onClick();\n\t\t\tpreventDefault(evt,true);\n\t\t});\n\n\n\t\t// retain focus by preventing native handling. if the\n\t\t// event target is the input it should not be modified.\n\t\t// otherwise, text selection within the input won't work.\n\t\taddEvent(control_input,'mousedown',\t(e) =>{\n\t\t\tif( control_input.value !== '' ){\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\t\t});\n\n\n\t\taddEvent(control_input,'keydown',\t(e) => self.onKeyDown(e as KeyboardEvent) );\n\t\taddEvent(control_input,'keyup',\t\t(e) => self.onKeyUp(e as KeyboardEvent) );\n\t\taddEvent(control_input,'keypress',\t(e) => self.onKeyPress(e as KeyboardEvent) );\n\t\taddEvent(control_input,'resize',\t() => self.positionDropdown(), passive_event);\n\t\taddEvent(control_input,'blur',\t\t() => self.onBlur() );\n\t\taddEvent(control_input,'focus',\t\t(e) => self.onFocus(e as MouseEvent) );\n\t\taddEvent(control_input,'paste',\t\t(e) => self.onPaste(e as MouseEvent) );\n\n\n\t\tconst doc_mousedown = (evt:Event) => {\n\n\t\t\t// blur if target is outside of this instance\n\t\t\t// dropdown is not always inside wrapper\n\t\t\tconst target = evt.composedPath()[0];\n\t\t\tif( !wrapper.contains(target as HTMLElement) && !dropdown.contains(target as HTMLElement) ){\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\tself.blur();\n\t\t\t\t}\n\t\t\t\tself.inputState();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// clicking anywhere in the control should not blur the control_input & close the dropdown\n\t\t\tpreventDefault(evt,true);\n\t\t};\n\n\t\tvar win_scroll = () => {\n\t\t\tif (self.isOpen) {\n\t\t\t\tself.positionDropdown();\n\t\t\t}\n\t\t};\n\n\n\t\taddEvent(document,'mousedown', doc_mousedown);\n\t\taddEvent(window,'sroll', win_scroll, passive_event);\n\t\taddEvent(window,'resize', win_scroll, passive_event);\n\n\t\tthis._destroy = () => {\n\t\t\tdocument.removeEventListener('mousedown',doc_mousedown);\n\t\t\twindow.removeEventListener('sroll',win_scroll);\n\t\t\twindow.removeEventListener('resize',win_scroll);\n\t\t};\n\n\t\t// store original html and tab index so that they can be\n\t\t// restored when the destroy() method is called.\n\t\tthis.revertSettings = {\n\t\t\tinnerHTML : input.innerHTML,\n\t\t\ttabIndex : input.tabIndex\n\t\t};\n\n\n\t\tinput.tabIndex = -1;\n\t\tsetAttr(input,{\thidden:'hidden'});\n\t\tinput.insertAdjacentElement('afterend', self.wrapper);\n\n\n\t\tself.setValue(settings.items);\n\t\tsettings.items = [];\n\n\t\taddEvent(input,'invalid', (e) => {\n\t\t\tpreventDefault(e);\n\t\t\tif( !self.isInvalid ){\n\t\t\t\tself.isInvalid = true;\n\t\t\t\tself.refreshState();\n\t\t\t}\n\t\t});\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshItems();\n\t\tself.close(false);\n\t\tself.inputState();\n\t\tself.isSetup = true;\n\n\t\tif( input.disabled ){\n\t\t\tself.disable();\n\t\t}\n\n\t\tself.on('change', this.onChange);\n\n\t\taddClasses(input,'tomselected');\n\t\tself.trigger('initialize');\n\n\t\t// preload options\n\t\tif (settings.preload === true) {\n\t\t\tself.load('');\n\t\t}\n\n\t\tself.setup();\n\t}\n\n\t/**\n\t * @deprecated v1.7.6\n\t *\n\t */\n\tsetup(){}\n\n\n\t/**\n\t * Register options and optgroups\n\t *\n\t */\n\tsetupOptions(options:TomOption[] = [], optgroups:TomOption[] = []){\n\n\t\t// build options table\n\t\tfor( const option of options ){\n\t\t\tthis.registerOption(option);\n\t\t}\n\n\n\t\t// build optgroup table\n\t\tfor( const optgroup of optgroups ){\n\t\t\tthis.registerOptionGroup(optgroup);\n\t\t}\n\t}\n\n\t/**\n\t * Sets up default rendering functions.\n\t */\n\tsetupTemplates() {\n\t\tvar self = this;\n\t\tvar field_label = self.settings.labelField;\n\t\tvar field_optgroup = self.settings.optgroupLabelField;\n\n\t\tvar templates = {\n\t\t\t'optgroup': (data:TomOption) => {\n\t\t\t\tlet optgroup = document.createElement('div');\n\t\t\t\toptgroup.className = 'optgroup';\n\t\t\t\toptgroup.appendChild(data.options);\n\t\t\t\treturn optgroup;\n\n\t\t\t},\n\t\t\t'optgroup_header': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t\t\t},\n\t\t\t'option': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'item': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'option_create': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t\t\t},\n\t\t\t'no_results':() => {\n\t\t\t\treturn '<div class=\"no-results\">No results found</div>';\n\t\t\t},\n\t\t\t'loading':() => {\n\t\t\t\treturn '<div class=\"spinner\"></div>';\n\t\t\t},\n\t\t\t'not_loading':() => {},\n\t\t\t'dropdown':() => {\n\t\t\t\treturn '<div></div>';\n\t\t\t}\n\t\t};\n\n\n\t\tself.settings.render = Object.assign({}, templates, self.settings.render);\n\t}\n\n\t/**\n\t * Maps fired events to callbacks provided\n\t * in the settings used when creating the control.\n\t */\n\tsetupCallbacks() {\n\t\tvar key, fn;\n\t\tvar callbacks:{[key:string]:string} = {\n\t\t\t'initialize'      : 'onInitialize',\n\t\t\t'change'          : 'onChange',\n\t\t\t'item_add'        : 'onItemAdd',\n\t\t\t'item_remove'     : 'onItemRemove',\n\t\t\t'item_select'     : 'onItemSelect',\n\t\t\t'clear'           : 'onClear',\n\t\t\t'option_add'      : 'onOptionAdd',\n\t\t\t'option_remove'   : 'onOptionRemove',\n\t\t\t'option_clear'    : 'onOptionClear',\n\t\t\t'optgroup_add'    : 'onOptionGroupAdd',\n\t\t\t'optgroup_remove' : 'onOptionGroupRemove',\n\t\t\t'optgroup_clear'  : 'onOptionGroupClear',\n\t\t\t'dropdown_open'   : 'onDropdownOpen',\n\t\t\t'dropdown_close'  : 'onDropdownClose',\n\t\t\t'type'            : 'onType',\n\t\t\t'load'            : 'onLoad',\n\t\t\t'focus'           : 'onFocus',\n\t\t\t'blur'            : 'onBlur'\n\t\t};\n\n\t\tfor (key in callbacks) {\n\n\t\t\tfn = this.settings[callbacks[key] as (keyof TomSettings)];\n\t\t\tif (fn) this.on(key, fn);\n\n\t\t}\n\t}\n\n\t/**\n\t * Triggered when the main control element\n\t * has a click event.\n\t *\n\t */\n\tonClick():void {\n\t\tvar self = this;\n\n\t\tif( self.activeItems.length > 0 ){\n\t\t\tself.clearActiveItems();\n\t\t\tself.focus();\n\t\t\treturn;\n\t\t}\n\n\t\tif( self.isFocused && self.isOpen ){\n\t\t\tself.blur();\n\t\t} else {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * @deprecated v1.7\n\t *\n\t */\n\tonMouseDown():void {}\n\n\t/**\n\t * Triggered when the value of the control has been changed.\n\t * This should propagate the event to the original DOM\n\t * input / select element.\n\t */\n\tonChange() {\n\t\ttriggerEvent(this.input, 'input');\n\t\ttriggerEvent(this.input, 'change');\n\t}\n\n\t/**\n\t * Triggered on <input> paste.\n\t *\n\t */\n\tonPaste(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif (self.isFull() || self.isInputHidden || self.isLocked) {\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\t// If a regex or string is included, this will split the pasted\n\t\t// input and create Items for each separate value\n\t\tif (self.settings.splitOn) {\n\n\t\t\t// Wait for pasted text to be recognized in value\n\t\t\tsetTimeout(() => {\n\t\t\t\tvar pastedText = self.inputValue();\n\t\t\t\tif( !pastedText.match(self.settings.splitOn)){\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tvar splitInput = pastedText.trim().split(self.settings.splitOn);\n\t\t\t\tfor( const piece of splitInput ){\n\t\t\t\t\tself.createItem(piece);\n\t\t\t\t}\n\t\t\t}, 0);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keypress.\n\t *\n\t */\n\tonKeyPress(e:KeyboardEvent):void {\n\t\tvar self = this;\n\t\tif(self.isLocked){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t\tvar character = String.fromCharCode(e.keyCode || e.which);\n\t\tif (self.settings.create && self.settings.mode === 'multi' && character === self.settings.delimiter) {\n\t\t\tself.createItem();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keydown.\n\t *\n\t */\n\tonKeyDown(e:KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif (self.isLocked) {\n\t\t\tif (e.keyCode !== constants.KEY_TAB) {\n\t\t\t\tpreventDefault(e);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (e.keyCode) {\n\n\t\t\t// ctrl+A: select all\n\t\t\tcase constants.KEY_A:\n\t\t\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\t\t\tself.selectAll();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\t// esc: close dropdown\n\t\t\tcase constants.KEY_ESC:\n\t\t\t\tif (self.isOpen) {\n\t\t\t\t\tpreventDefault(e,true);\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t\tself.clearActiveItems();\n\t\t\t\treturn;\n\n\t\t\t// down: open dropdown or move selection down\n\t\t\tcase constants.KEY_DOWN:\n\t\t\t\tif (!self.isOpen && self.hasOptions) {\n\t\t\t\t\tself.open();\n\t\t\t\t} else if (self.activeOption) {\n\t\t\t\t\tlet next = self.getAdjacent(self.activeOption, 1);\n\t\t\t\t\tif (next) self.setActiveOption(next);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// up: move selection up\n\t\t\tcase constants.KEY_UP:\n\t\t\t\tif (self.activeOption) {\n\t\t\t\t\tlet prev = self.getAdjacent(self.activeOption, -1);\n\t\t\t\t\tif (prev) self.setActiveOption(prev);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// return: select active option\n\t\t\tcase constants.KEY_RETURN:\n\t\t\t\tif (self.isOpen && self.activeOption) {\n\t\t\t\t\tself.onOptionSelect(e,self.activeOption);\n\t\t\t\t\tpreventDefault(e);\n\n\t\t\t\t// if the option_create=null, the dropdown might be closed\n\t\t\t\t}else if (self.settings.create && self.createItem()) {\n\t\t\t\t\tpreventDefault(e);\n\t\t\t\t}\n\t\t\t\treturn;\n\n\t\t\t// left: modifiy item selection to the left\n\t\t\tcase constants.KEY_LEFT:\n\t\t\t\tself.advanceSelection(-1, e);\n\t\t\t\treturn;\n\n\t\t\t// right: modifiy item selection to the right\n\t\t\tcase constants.KEY_RIGHT:\n\t\t\t\tself.advanceSelection(1, e);\n\t\t\t\treturn;\n\n\t\t\t// tab: select active option and/or create item\n\t\t\tcase constants.KEY_TAB:\n\t\t\t\tif( self.settings.selectOnTab ){\n\t\t\t\t\tif( self.isOpen && self.activeOption) {\n\t\t\t\t\t\tself.tab_key = true;\n\t\t\t\t\t\tself.onOptionSelect(e,self.activeOption);\n\n\t\t\t\t\t\t// prevent default [tab] behaviour of jump to the next field\n\t\t\t\t\t\t// if select isFull, then the dropdown won't be open and [tab] will work normally\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t\tself.tab_key = false;\n\t\t\t\t\t}\n\t\t\t\t\tif (self.settings.create && self.createItem()) {\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\n\t\t\t// delete|backspace: delete items\n\t\t\tcase constants.KEY_BACKSPACE:\n\t\t\tcase constants.KEY_DELETE:\n\t\t\t\tself.deleteSelection(e);\n\t\t\t\treturn;\n\t\t}\n\n\t\t// don't enter text in the control_input when active items are selected\n\t\tif( self.isInputHidden && !isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\tpreventDefault(e);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keyup.\n\t *\n\t */\n\tonKeyUp(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif (self.isLocked){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\tvar value = self.inputValue();\n\t\tif (self.lastValue !== value) {\n\t\t\tself.lastValue = value;\n\n\t\t\tif( self.settings.shouldLoad.call(self,value) ){\n\t\t\t\tself.load(value);\n\t\t\t}\n\n\t\t\tself.refreshOptions();\n\t\t\tself.trigger('type', value);\n\t\t}\n\t}\n\n\n\t/**\n\t * Triggered on <input> focus.\n\t *\n\t */\n\tonFocus(e?:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\t\tvar wasFocused = self.isFocused;\n\n\t\tif (self.isDisabled) {\n\t\t\tself.blur();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\tif (self.ignoreFocus) return;\n\t\tself.isFocused = true;\n\t\tif (self.settings.preload === 'focus') self.load('');\n\n\t\tif (!wasFocused) self.trigger('focus');\n\n\t\tif (!self.activeItems.length) {\n\t\t\tself.showInput();\n\t\t\tself.refreshOptions(!!self.settings.openOnFocus);\n\t\t}\n\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Triggered on <input> blur.\n\t *\n\t */\n\tonBlur():void {\n\t\tvar self = this;\n\t\tif (!self.isFocused) return;\n\t\tself.isFocused = false;\n\t\tself.ignoreFocus = false;\n\n\t\tvar deactivate = () => {\n\t\t\tself.close();\n\t\t\tself.setActiveItem();\n\t\t\tself.setCaret(self.items.length);\n\t\t\tself.trigger('blur');\n\t\t};\n\n\t\tif (self.settings.create && self.settings.createOnBlur) {\n\t\t\tself.createItem(null, false, deactivate);\n\t\t} else {\n\t\t\tdeactivate();\n\t\t}\n\t}\n\n\n\t/**\n\t * Triggered when the user clicks on an option\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\tonOptionSelect( evt:MouseEvent|KeyboardEvent, option:HTMLElement ){\n\t\tvar value, self = this;\n\n\t\tif( !option ){\n\t\t\treturn;\n\t\t}\n\n\t\t// should not be possible to trigger a option under a disabled optgroup\n\t\tif( option.parentElement && option.parentElement.matches('[data-disabled]') ){\n\t\t\treturn;\n\t\t}\n\n\n\t\tif( option.classList.contains('create') ){\n\t\t\tself.createItem(null, true, () => {\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tvalue = option.dataset.value;\n\t\t\tif (typeof value !== 'undefined') {\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tself.addItem(value);\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( !self.settings.hideSelected && evt.type && /click/.test(evt.type) ){\n\t\t\t\t\tself.setActiveOption(option);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Triggered when the user clicks on an item\n\t * that has been selected.\n\t *\n\t */\n\tonItemSelect( evt?:MouseEvent, item?:TomItem ):boolean{\n\t\tvar self = this;\n\n\t\tif( !self.isLocked && self.settings.mode === 'multi' ){\n\t\t\tpreventDefault(evt);\n\t\t\tself.setActiveItem(item, evt);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Determines whether or not to invoke\n\t * the user-provided option provider / loader\n\t *\n\t * Note, there is a subtle difference between\n\t * this.canLoad() and this.settings.shouldLoad();\n\t *\n\t *\t- settings.shouldLoad() is a user-input validator.\n\t *\tWhen false is returned, the not_loading template\n\t *\twill be added to the dropdown\n\t *\n\t *\t- canLoad() is lower level validator that checks\n\t * \tthe Tom Select instance. There is no inherent user\n\t *\tfeedback when canLoad returns false\n\t *\n\t */\n\tcanLoad(value:string):boolean{\n\n\t\tif( !this.settings.load ) return false;\n\t\tif( this.loadedSearches.hasOwnProperty(value) ) return false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Invokes the user-provided option provider / loader.\n\t *\n\t */\n\tload(value:string):void {\n\t\tconst self = this;\n\n\t\tif( !self.canLoad(value) ) return;\n\n\t\taddClasses(self.wrapper,self.settings.loadingClass);\n\t\tself.loading++;\n\n\t\tconst callback = self.loadCallback.bind(self);\n\t\tself.settings.load.call(self, value, callback);\n\t}\n\n\t/**\n\t * Invoked by the user-provided option provider\n\t *\n\t */\n\tloadCallback( options:TomOption[], optgroups:TomOption[] ):void{\n\t\tconst self = this;\n\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\tself.lastQuery = null;\n\n\t\tself.clearActiveOption(); // when new results load, focus should be on first option\n\t\tself.setupOptions(options,optgroups);\n\n\t\tself.refreshOptions(self.isFocused && !self.isInputHidden);\n\n\t\tif (!self.loading) {\n\t\t\tremoveClasses(self.wrapper,self.settings.loadingClass);\n\t\t}\n\n\t\tself.trigger('load', options, optgroups);\n\t}\n\n\n\t/**\n\t * Sets the input field of the control to the specified value.\n\t *\n\t */\n\tsetTextboxValue(value:string = '') {\n\t\tvar input = this.control_input;\n\t\tvar changed = input.value !== value;\n\t\tif (changed) {\n\t\t\tinput.value = value;\n\t\t\ttriggerEvent(input,'update');\n\t\t\tthis.lastValue = value;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the value of the control. If multiple items\n\t * can be selected (e.g. <select multiple>), this returns\n\t * an array. If only one item can be selected, this\n\t * returns a string.\n\t *\n\t */\n\tgetValue():string|string[] {\n\n\t\tif( this.is_select_tag && this.input.hasAttribute('multiple')) {\n\t\t\treturn this.items;\n\t\t}\n\n\t\treturn this.items.join(this.settings.delimiter);\n\t}\n\n\t/**\n\t * Resets the selected items to the given value.\n\t *\n\t */\n\tsetValue( value:string|string[], silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change'];\n\n\t\tdebounce_events(this, events,() => {\n\t\t\tthis.clear(silent);\n\t\t\tthis.addItems(value, silent);\n\t\t});\n\t}\n\n\n\t/**\n\t * Resets the number of max items to the given value\n\t *\n\t */\n\tsetMaxItems(value:null|number){\n\t\tif(value === 0) value = null; //reset to unlimited items.\n\t\tthis.settings.maxItems = value;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Sets the selected item.\n\t *\n\t */\n\tsetActiveItem( item?:TomItem, e?:MouseEvent|KeyboardEvent ){\n\t\tvar self = this;\n\t\tvar eventName;\n\t\tvar i, begin, end, swap;\n\t\tvar last;\n\n\t\tif (self.settings.mode === 'single') return;\n\n\t\t// clear the active selection\n\t\tif( !item ){\n\t\t\tself.clearActiveItems();\n\t\t\tif (self.isFocused) {\n\t\t\t\tself.showInput();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// modify selection\n\t\teventName = e && e.type.toLowerCase();\n\n\t\tif (eventName === 'click' && isKeyDown('shiftKey',e) && self.activeItems.length) {\n\t\t\tlast\t= self.getLastActive();\n\t\t\tbegin\t= Array.prototype.indexOf.call(self.control.children, last);\n\t\t\tend\t\t= Array.prototype.indexOf.call(self.control.children, item);\n\n\t\t\tif (begin > end) {\n\t\t\t\tswap  = begin;\n\t\t\t\tbegin = end;\n\t\t\t\tend   = swap;\n\t\t\t}\n\t\t\tfor (i = begin; i <= end; i++) {\n\t\t\t\titem = self.control.children[i] as TomItem;\n\t\t\t\tif (self.activeItems.indexOf(item) === -1) {\n\t\t\t\t\tself.setActiveItemClass(item);\n\t\t\t\t}\n\t\t\t}\n\t\t\tpreventDefault(e);\n\t\t} else if ((eventName === 'click' && isKeyDown(constants.KEY_SHORTCUT,e) ) || (eventName === 'keydown' && isKeyDown('shiftKey',e))) {\n\t\t\tif( item.classList.contains('active') ){\n\t\t\t\tself.removeActiveItem( item );\n\t\t\t} else {\n\t\t\t\tself.setActiveItemClass(item);\n\t\t\t}\n\t\t} else {\n\t\t\tself.clearActiveItems();\n\t\t\tself.setActiveItemClass(item);\n\t\t}\n\n\t\t// ensure control has focus\n\t\tself.hideInput();\n\t\tif (!self.isFocused) {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Set the active and last-active classes\n\t *\n\t */\n\tsetActiveItemClass( item:TomItem ){\n\t\tconst self = this;\n\t\tconst last_active = self.control.querySelector('.last-active');\n\t\tif( last_active ) removeClasses(last_active as HTMLElement,'last-active');\n\n\t\taddClasses(item,'active last-active');\n\t\tself.trigger('item_select', item);\n\t\tif( self.activeItems.indexOf(item) == -1 ){\n\t\t\tself.activeItems.push( item );\n\t\t}\n\t}\n\n\t/**\n\t * Remove active item\n\t *\n\t */\n\tremoveActiveItem( item:TomItem ){\n\t\tvar idx = this.activeItems.indexOf(item);\n\t\tthis.activeItems.splice(idx, 1);\n\t\tremoveClasses(item,'active');\n\t}\n\n\t/**\n\t * Clears all the active items\n\t *\n\t */\n\tclearActiveItems(){\n\t\tremoveClasses(this.activeItems,'active');\n\t\tthis.activeItems = [];\n\t}\n\n\t/**\n\t * Sets the selected item in the dropdown menu\n\t * of available options.\n\t *\n\t */\n\tsetActiveOption( option:null|HTMLElement ):void{\n\n\t\tif( option === this.activeOption ){\n\t\t\treturn;\n\t\t}\n\n\t\tthis.clearActiveOption();\n\t\tif( !option ) return;\n\n\t\tthis.activeOption = option;\n\t\tsetAttr(this.control_input,{'aria-activedescendant':option.getAttribute('id')});\n\t\tsetAttr(option,{'aria-selected':'true'});\n\t\taddClasses(option,'active');\n\t\tthis.scrollToOption(option);\n\t}\n\n\t/**\n\t * Sets the dropdown_content scrollTop to display the option\n\t *\n\t */\n\tscrollToOption( option:null|HTMLElement, behavior?:string ):void{\n\n\t\tif( !option ) return;\n\n\t\tconst content\t\t= this.dropdown_content;\n\t\tconst height_menu\t= content.clientHeight;\n\t\tconst scrollTop\t\t= content.scrollTop || 0;\n\t\tconst height_item\t= option.offsetHeight;\n\t\tconst y\t\t\t\t= option.getBoundingClientRect().top - content.getBoundingClientRect().top + scrollTop;\n\n\t\tif (y + height_item > height_menu + scrollTop) {\n\t\t\tthis.scroll(y - height_menu + height_item, behavior);\n\n\t\t} else if (y < scrollTop) {\n\t\t\tthis.scroll(y, behavior);\n\t\t}\n\t}\n\n\t/**\n\t * Scroll the dropdown to the given position\n\t *\n\t */\n\tscroll( scrollTop:number, behavior?:string ):void{\n\t\tconst content = this.dropdown_content;\n\t\tif( behavior ){\n\t\t\tcontent.style.scrollBehavior = behavior;\n\t\t}\n\t\tcontent.scrollTop = scrollTop;\n\t\tcontent.style.scrollBehavior = '';\n\t}\n\n\t/**\n\t * Clears the active option\n\t *\n\t */\n\tclearActiveOption(){\n\t\tif( this.activeOption ){\n\t\t\tremoveClasses(this.activeOption,'active');\n\t\t\tsetAttr(this.activeOption,{'aria-selected':null});\n\t\t}\n\t\tthis.activeOption = null;\n\t\tsetAttr(this.control_input,{'aria-activedescendant':null});\n\t}\n\n\n\t/**\n\t * Selects all items (CTRL + A).\n\t */\n\tselectAll() {\n\n\t\tif (this.settings.mode === 'single') return;\n\n\t\tthis.activeItems = this.controlChildren();\n\n\t\tif( this.activeItems.length ){\n\t\t\taddClasses( this.activeItems, 'active' );\n\n\t\t\tthis.hideInput();\n\t\t\tthis.close();\n\t\t}\n\t\tthis.focus();\n\t}\n\n\t/**\n\t * Determines if the control_input should be in a hidden or visible state\n\t *\n\t */\n\tinputState(){\n\t\tvar self = this;\n\n\t\tif( self.settings.controlInput ) return;\n\n\t\tif( self.activeItems.length > 0 || (!self.isFocused && this.settings.hidePlaceholder && self.items.length > 0) ){\n\t\t\tself.setTextboxValue();\n\t\t\tself.isInputHidden = true;\n\t\t\taddClasses(self.wrapper,'input-hidden');\n\t\t}else{\n\t\t\tself.isInputHidden = false;\n\t\t\tremoveClasses(self.wrapper,'input-hidden');\n\t\t}\n\t}\n\n\t/**\n\t * Hides the input element out of view, while\n\t * retaining its focus.\n\t * @deprecated 1.3\n\t */\n\thideInput() {\n\t\tthis.inputState();\n\t}\n\n\t/**\n\t * Restores input visibility.\n\t * @deprecated 1.3\n\t */\n\tshowInput() {\n\t\tthis.inputState();\n\t}\n\n\t/**\n\t * Get the input value\n\t */\n\tinputValue(){\n\t\treturn this.control_input.value.trim();\n\t}\n\n\t/**\n\t * Gives the control focus.\n\t */\n\tfocus() {\n\t\tvar self = this;\n\t\tif (self.isDisabled) return;\n\n\t\tself.ignoreFocus = true;\n\t\tself.control_input.focus();\n\t\tsetTimeout(() => {\n\t\t\tself.ignoreFocus = false;\n\t\t\tself.onFocus();\n\t\t}, 0);\n\t}\n\n\t/**\n\t * Forces the control out of focus.\n\t *\n\t */\n\tblur():void {\n\t\tthis.control_input.blur();\n\n\t\tthis.onBlur();\n\t}\n\n\t/**\n\t * Returns a function that scores an object\n\t * to show how good of a match it is to the\n\t * provided query.\n\t *\n\t * @return {function}\n\t */\n\tgetScoreFunction(query:string) {\n\t\treturn this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t}\n\n\t/**\n\t * Returns search options for sifter (the system\n\t * for scoring and sorting results).\n\t *\n\t * @see https://github.com/orchidjs/sifter.js\n\t * @return {object}\n\t */\n\tgetSearchOptions() {\n\t\tvar settings = this.settings;\n\t\tvar sort = settings.sortField;\n\t\tif (typeof settings.sortField === 'string') {\n\t\t\tsort = [{field: settings.sortField}];\n\t\t}\n\n\t\treturn {\n\t\t\tfields      : settings.searchField,\n\t\t\tconjunction : settings.searchConjunction,\n\t\t\tsort        : sort,\n\t\t\tnesting     : settings.nesting\n\t\t};\n\t}\n\n\t/**\n\t * Searches through available options and returns\n\t * a sorted array of matches.\n\t *\n\t */\n\tsearch(query:string) : ReturnType<Sifter['search']>{\n\t\tvar i, result, calculateScore;\n\t\tvar self     = this;\n\t\tvar options  = this.getSearchOptions();\n\n\t\t// validate user-provided result scoring function\n\t\tif ( self.settings.score ){\n\t\t\tcalculateScore = self.settings.score.call(self,query);\n\t\t\tif (typeof calculateScore !== 'function') {\n\t\t\t\tthrow new Error('Tom Select \"score\" setting must be a function that returns a function');\n\t\t\t}\n\t\t}\n\n\t\t// perform search\n\t\tif (query !== self.lastQuery) {\n\t\t\tself.lastQuery\t\t\t= query;\n\t\t\tresult\t\t\t\t\t= self.sifter.search(query, Object.assign(options, {score: calculateScore}));\n\t\t\tself.currentResults\t\t= result;\n\t\t} else {\n\t\t\tresult\t\t\t\t\t= Object.assign( {}, self.currentResults);\n\t\t}\n\n\t\t// filter out selected items\n\t\tif( self.settings.hideSelected ){\n\t\t\tfor (i = result.items.length - 1; i >= 0; i--) {\n\t\t\t\tlet hashed = hash_key(result.items[i].id);\n\t\t\t\tif( hashed && self.items.indexOf(hashed) !== -1 ){\n\t\t\t\t\tresult.items.splice(i, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Refreshes the list of available options shown\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\trefreshOptions( triggerDropdown:boolean = true ){\n\t\tvar i, j, k, n, optgroup, optgroups, html, has_create_option, active_value, active_group;\n\t\tvar create;\n\t\tconst groups: {[key:string]:DocumentFragment} = {};\n\n\t\tconst groups_order:string[]\t= [];\n\t\tvar self\t\t\t\t\t= this;\n\t\tvar query\t\t\t\t\t= self.inputValue();\n\t\tvar results\t\t\t\t\t= self.search(query);\n\t\tvar active_option\t\t\t= self.activeOption;\n\t\tvar show_dropdown\t\t\t= self.settings.shouldOpen || false;\n\t\tvar dropdown_content\t\t= self.dropdown_content;\n\n\t\tif( active_option ){\n\t\t\tactive_value = active_option.dataset.value;\n\t\t\tactive_group = active_option.closest('[data-group]') as HTMLElement;\n\t\t}\n\n\t\t// build markup\n\t\tn = results.items.length;\n\t\tif (typeof self.settings.maxOptions === 'number') {\n\t\t\tn = Math.min(n, self.settings.maxOptions);\n\t\t}\n\n\t\tif( n > 0 ){\n\t\t\tshow_dropdown = true;\n\t\t}\n\n\t\t// render and group available options individually\n\t\tfor (i = 0; i < n; i++) {\n\n\t\t\t// get option dom element, don't re-render if we\n\t\t\tlet option\t\t\t= self.options[results.items[i].id];\n\t\t\tlet opt_value\t\t= get_hash(option[self.settings.valueField]);\n\t\t\tlet option_el\t\t= self.getOption(opt_value);\n\t\t\tif( !option_el ){\n\t\t\t\toption_el = self._render('option', option);\n\t\t\t}\n\n\t\t\t// toggle 'selected' class\n\t\t\tif( !self.settings.hideSelected ){\n\t\t\t\toption_el.classList.toggle('selected', self.items.includes(opt_value) );\n\t\t\t}\n\n\t\t\toptgroup    = option[self.settings.optgroupField] || '';\n\t\t\toptgroups   = Array.isArray(optgroup) ? optgroup : [optgroup];\n\n\t\t\tfor (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t\t\t\toptgroup = optgroups[j];\n\t\t\t\tif (!self.optgroups.hasOwnProperty(optgroup)) {\n\t\t\t\t\toptgroup = '';\n\t\t\t\t}\n\t\t\t\tif (!groups.hasOwnProperty(optgroup)) {\n\t\t\t\t\tgroups[optgroup] = document.createDocumentFragment();\n\t\t\t\t\tgroups_order.push(optgroup);\n\t\t\t\t}\n\n\t\t\t\t// nodes can only have one parent, so if the option is in mutple groups, we need a clone\n\t\t\t\tif( j > 0 ){\n\t\t\t\t\toption_el = option_el.cloneNode(true) as HTMLElement;\n\t\t\t\t\tsetAttr(option_el,{id: option.$id+'-clone-'+j,'aria-selected':null});\n\t\t\t\t\toption_el.classList.add('ts-cloned');\n\t\t\t\t\tremoveClasses(option_el,'active');\n\t\t\t\t}\n\n\t\t\t\t// make sure we keep the activeOption in the same group\n\t\t\t\tif( active_value == opt_value && active_group && active_group.dataset.group === optgroup ){\n\t\t\t\t\tactive_option = option_el;\n\t\t\t\t}\n\n\t\t\t\tgroups[optgroup].appendChild(option_el);\n\t\t\t}\n\t\t}\n\n\t\t// sort optgroups\n\t\tif (this.settings.lockOptgroupOrder) {\n\t\t\tgroups_order.sort((a, b) => {\n\t\t\t\tvar a_order = self.optgroups[a] && self.optgroups[a].$order || 0;\n\t\t\t\tvar b_order = self.optgroups[b] && self.optgroups[b].$order || 0;\n\t\t\t\treturn a_order - b_order;\n\t\t\t});\n\t\t}\n\n\t\t// render optgroup headers & join groups\n\t\thtml = document.createDocumentFragment();\n\t\tfor( optgroup of groups_order ){\n\t\t\tif (self.optgroups.hasOwnProperty(optgroup) && groups[optgroup].children.length) {\n\n\t\t\t\tlet group_options = document.createDocumentFragment();\n\t\t\t\tlet header = self.render('optgroup_header', self.optgroups[optgroup]);\n\t\t\t\tappend( group_options, header );\n\t\t\t\tappend( group_options, groups[optgroup] );\n\n\t\t\t\tlet group_html = self.render('optgroup', {group:self.optgroups[optgroup],options:group_options} );\n\n\t\t\t\tappend( html, group_html );\n\n\t\t\t} else {\n\t\t\t\tappend( html, groups[optgroup] );\n\t\t\t}\n\t\t}\n\n\t\tdropdown_content.innerHTML = '';\n\t\tappend( dropdown_content, html );\n\n\t\t// highlight matching terms inline\n\t\tif (self.settings.highlight) {\n\t\t\tremoveHighlight( dropdown_content );\n\t\t\tif (results.query.length && results.tokens.length) {\n\t\t\t\tfor( const tok of results.tokens ){\n\t\t\t\t\thighlight( dropdown_content, tok.regex);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// helper method for adding templates to dropdown\n\t\tvar add_template = (template:TomTemplateNames) => {\n\t\t\tlet content = self.render(template,{input:query});\n\t\t\tif( content ){\n\t\t\t\tshow_dropdown = true;\n\t\t\t\tdropdown_content.insertBefore(content, dropdown_content.firstChild);\n\t\t\t}\n\t\t\treturn content;\n\t\t};\n\n\t\t// invalid query\n\t\tif( !self.settings.shouldLoad.call(self,query) ){\n\t\t\tadd_template('not_loading');\n\n\t\t// add loading message\n\t\t}else if( self.loading ){\n\t\t\tadd_template('loading');\n\n\t\t// add no_results message\n\t\t}else if( results.items.length === 0 ){\n\t\t\tadd_template('no_results');\n\n\t\t}\n\n\n\n\t\t// add create option\n\t\thas_create_option = self.canCreate(query);\n\t\tif (has_create_option) {\n\t\t\tcreate = add_template('option_create');\n\t\t}\n\n\n\t\t// activate\n\t\tself.hasOptions = results.items.length > 0 || has_create_option;\n\t\tif( show_dropdown ){\n\n\t\t\tif (results.items.length > 0) {\n\n\t\t\t\tif( !dropdown_content.contains(active_option) && self.settings.mode === 'single' && self.items.length ){\n\t\t\t\t\tactive_option = self.getOption(self.items[0]);\n\t\t\t\t}\n\n\t\t\t\tif( !dropdown_content.contains(active_option)  ){\n\n\t\t\t\t\tlet active_index = 0;\n\t\t\t\t\tif( create && !self.settings.addPrecedence ){\n\t\t\t\t\t\tactive_index = 1;\n\t\t\t\t\t}\n\t\t\t\t\tactive_option = self.selectable()[active_index] as HTMLElement;\n\t\t\t\t}\n\n\t\t\t}else if( create ){\n\t\t\t\tactive_option = create;\n\t\t\t}\n\n\t\t\tif( triggerDropdown && !self.isOpen ){\n\t\t\t\tself.open();\n\t\t\t\tself.scrollToOption(active_option,'auto');\n\t\t\t}\n\t\t\tself.setActiveOption(active_option);\n\n\t\t}else{\n\t\t\tself.clearActiveOption();\n\t\t\tif( triggerDropdown && self.isOpen ){\n\t\t\t\tself.close(false); // if create_option=null, we want the dropdown to close but not reset the textbox value\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Return list of selectable options\n\t *\n\t */\n\tselectable():NodeList{\n\t\treturn this.dropdown_content.querySelectorAll('[data-selectable]');\n\t}\n\n\n\n\t/**\n\t * Adds an available option. If it already exists,\n\t * nothing will happen. Note: this does not refresh\n\t * the options list dropdown (use `refreshOptions`\n\t * for that).\n\t *\n\t * Usage:\n\t *\n\t *   this.addOption(data)\n\t *\n\t */\n\taddOption(data:TomOption|TomOption[]):void {\n\t\tvar value, self = this;\n\n\t\tif (Array.isArray(data)) {\n\t\t\tfor( const dat of data ){\n\t\t\t\tself.addOption(dat);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (value = self.registerOption(data)) {\n\t\t\tself.userOptions[value] = true;\n\t\t\tself.lastQuery = null;\n\t\t\tself.trigger('option_add', value, data);\n\t\t}\n\t}\n\n\t/**\n\t * Registers an option to the pool of options.\n\t *\n\t */\n\tregisterOption(data:TomOption):false|string {\n\t\tvar key = hash_key(data[this.settings.valueField]);\n\t\tif ( key === null || this.options.hasOwnProperty(key)) return false;\n\n\t\tdata.$order\t\t\t= data.$order || ++this.order;\n\t\tdata.$id\t\t\t= this.inputId + '-opt-' + data.$order;\n\t\tthis.options[key]\t= data;\n\t\treturn key;\n\t}\n\n\t/**\n\t * Registers an option group to the pool of option groups.\n\t *\n\t * @return {boolean|string}\n\t */\n\tregisterOptionGroup(data:TomOption) {\n\t\tvar key = hash_key(data[this.settings.optgroupValueField]);\n\n\t\tif ( key === null ) return false;\n\n\t\tdata.$order = data.$order || ++this.order;\n\t\tthis.optgroups[key] = data;\n\t\treturn key;\n\t}\n\n\t/**\n\t * Registers a new optgroup for options\n\t * to be bucketed into.\n\t *\n\t */\n\taddOptionGroup(id:string, data:TomOption) {\n\t\tvar hashed_id;\n\t\tdata[this.settings.optgroupValueField] = id;\n\n\t\tif( hashed_id = this.registerOptionGroup(data) ){\n\t\t\tthis.trigger('optgroup_add', hashed_id, data);\n\t\t}\n\t}\n\n\t/**\n\t * Removes an existing option group.\n\t *\n\t */\n\tremoveOptionGroup(id:string) {\n\t\tif (this.optgroups.hasOwnProperty(id)) {\n\t\t\tdelete this.optgroups[id];\n\t\t\tthis.clearCache();\n\t\t\tthis.trigger('optgroup_remove', id);\n\t\t}\n\t}\n\n\t/**\n\t * Clears all existing option groups.\n\t */\n\tclearOptionGroups() {\n\t\tthis.optgroups = {};\n\t\tthis.clearCache();\n\t\tthis.trigger('optgroup_clear');\n\t}\n\n\t/**\n\t * Updates an option available for selection. If\n\t * it is visible in the selected items or options\n\t * dropdown, it will be re-rendered automatically.\n\t *\n\t */\n\tupdateOption(value:string, data:TomOption) {\n\t\tconst self = this;\n\t\tvar item_new;\n\t\tvar index_item;\n\n\t\tconst hashed\t\t= hash_key(value);\n\t\tif (hashed === null) return;\n\n\n\t\tconst value_new\t\t= hash_key(data[self.settings.valueField]);\n\t\tconst option\t\t= self.getOption(hashed);\n\t\tconst item\t\t\t= self.getItem(hashed);\n\n\n\t\t// sanity checks\n\t\tif (!self.options.hasOwnProperty(hashed)) return;\n\t\tif (typeof value_new !== 'string') throw new Error('Value must be set in option data');\n\n\t\tdata.$order = data.$order || self.options[hashed].$order;\n\t\tdelete self.options[hashed];\n\n\t\t// invalidate render cache\n\t\t// don't remove existing node yet, we'll remove it after replacing it\n\t\tself.uncacheValue(value_new);\n\t\tself.uncacheValue(hashed,false);\n\n\t\tself.options[value_new] = data;\n\n\t\t// update the option if it's in the dropdown\n\t\tif( option ){\n\t\t\tif( self.dropdown_content.contains(option) ){\n\n\t\t\t\tconst option_new\t= self._render('option', data);\n\t\t\t\treplaceNode(option, option_new);\n\n\t\t\t\tif( self.activeOption === option ){\n\t\t\t\t\tself.setActiveOption(option_new);\n\t\t\t\t}\n\t\t\t}\n\t\t\toption.remove();\n\t\t}\n\n\t\t// update the item if we have one\n\t\tif( item ){\n\t\t\tindex_item = self.items.indexOf(hashed);\n\t\t\tif (index_item !== -1) {\n\t\t\t\tself.items.splice(index_item, 1, value_new);\n\t\t\t}\n\n\t\t\titem_new\t= self._render('item', data);\n\n\t\t\tif( item.classList.contains('active') ) addClasses(item_new,'active');\n\n\t\t\treplaceNode( item, item_new);\n\t\t}\n\n\t\t// invalidate last query because we might have updated the sortField\n\t\tself.lastQuery = null;\n\t}\n\n\t/**\n\t * Removes a single option.\n\t *\n\t */\n\tremoveOption(value:string, silent?:boolean):void {\n\t\tconst self = this;\n\t\tvalue = get_hash(value);\n\n\t\tself.uncacheValue(value);\n\n\t\tdelete self.userOptions[value];\n\t\tdelete self.options[value];\n\t\tself.lastQuery = null;\n\t\tself.trigger('option_remove', value);\n\t\tself.removeItem(value, silent);\n\t}\n\n\t/**\n\t * Clears all options.\n\t */\n\tclearOptions() {\n\n\t\tthis.loadedSearches\t\t= {};\n\t\tthis.userOptions\t\t= {};\n\t\tthis.clearCache();\n\t\tvar selected:TomOptions\t= {};\n\t\tfor( let key in this.options){\n    \t\tif( this.options.hasOwnProperty(key) && this.items.indexOf(key) >= 0 ){\n\t\t\t\tselected[key] = this.options[key];\n\t\t\t}\n\t\t}\n\n\t\tthis.options = this.sifter.items = selected;\n\t\tthis.lastQuery = null;\n\t\tthis.trigger('option_clear');\n\t}\n\n\n\t/**\n\t * Removes a value from item and option caches\n\t *\n\t */\n\tuncacheValue(value:string, remove_node:boolean=true){\n\t\tconst self\t\t\t\t= this;\n\t\tconst cache_items\t\t= self.renderCache['item'];\n\t\tconst cache_options\t\t= self.renderCache['option'];\n\n\t\tif (cache_items) delete cache_items[value];\n\t\tif (cache_options) delete cache_options[value];\n\n\t\tif( remove_node ){\n\t\t\tconst option_el\t\t\t= self.getOption(value);\n\t\t\tif( option_el ) option_el.remove();\n\t\t}\n\t}\n\n\n\t/**\n\t * Returns the dom element of the option\n\t * matching the given value.\n\t *\n\t */\n\tgetOption(value:null|string):null|HTMLElement {\n\t\tvar hashed = hash_key(value);\n\t\treturn this.rendered('option',hashed);\n\t}\n\n\t/**\n\t * Returns the dom element of the next or previous dom element of the same type\n\t * Note: adjacent options may not be adjacent DOM elements (optgroups)\n\t *\n\t */\n\tgetAdjacent( option:null|HTMLElement, direction:number, type:string = 'option' ) : HTMLElement|null{\n\t\tvar self = this, all;\n\n\t\tif( !option ){\n\t\t\treturn null;\n\t\t}\n\n\t\tif( type == 'item' ){\n\t\t\tall\t\t\t= self.controlChildren();\n\t\t}else{\n\t\t\tall\t\t\t= self.dropdown_content.querySelectorAll('[data-selectable]');\n\t\t}\n\n\t\tfor( let i = 0; i < all.length; i++ ){\n\t\t\tif( all[i] != option ){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif( direction > 0 ){\n\t\t\t\treturn all[i+1] as HTMLElement;\n\t\t\t}\n\n\t\t\treturn all[i-1] as HTMLElement;\n\t\t}\n\t\treturn null;\n\t}\n\n\n\t/**\n\t * Returns the dom element of the item\n\t * matching the given value.\n\t *\n\t */\n\tgetItem(item:string|TomItem|null):null|TomItem {\n\n\t\tif( typeof item == 'object' ){\n\t\t\treturn item;\n\t\t}\n\n\t\tvar value = hash_key(item);\n\t\treturn value\n\t\t\t? this.control.querySelector(`[data-value=\"${addSlashes(value)}\"]`)\n\t\t\t: null;\n\t}\n\n\t/**\n\t * \"Selects\" multiple items at once. Adds them to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItems( values:string|string[], silent?:boolean ):void{\n\t\tvar self = this;\n\n\t\tvar items = Array.isArray(values) ? values : [values];\n\t\titems = items.filter(x => self.items.indexOf(x) === -1);\n\t\tfor (let i = 0, n = items.length; i < n; i++) {\n\t\t\tself.isPending = (i < n - 1);\n\t\t\tself.addItem(items[i], silent);\n\t\t}\n\t}\n\n\t/**\n\t * \"Selects\" an item. Adds it to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItem( value:string, silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change'];\n\n\t\tdebounce_events(this, events, () => {\n\t\t\tvar item, wasFull;\n\t\t\tconst self = this;\n\t\t \tconst inputMode = self.settings.mode;\n\t\t\tconst hashed = hash_key(value);\n\n\t\t\tif( hashed && self.items.indexOf(hashed) !== -1 ){\n\n\t\t\t\tif( inputMode === 'single' ){\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( inputMode === 'single' || !self.settings.duplicates ){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (hashed === null || !self.options.hasOwnProperty(hashed)) return;\n\t\t\tif (inputMode === 'single') self.clear(silent);\n\t\t\tif (inputMode === 'multi' && self.isFull()) return;\n\n\t\t\titem = self._render('item', self.options[hashed]);\n\n\t\t\tif( self.control.contains(item) ){ // duplicates\n\t\t\t\titem = item.cloneNode(true) as HTMLElement;\n\t\t\t}\n\n\t\t\twasFull = self.isFull();\n\t\t\tself.items.splice(self.caretPos, 0, hashed);\n\t\t\tself.insertAtCaret(item);\n\n\t\t\tif (self.isSetup) {\n\t\t\t\tlet options = self.selectable();\n\n\t\t\t\t// update menu / remove the option (if this is not one item being added as part of series)\n\t\t\t\tif( !self.isPending && self.settings.hideSelected ){\n\t\t\t\t\tlet option = self.getOption(hashed);\n\t\t\t\t\tlet next = self.getAdjacent(option, 1);\n\t\t\t\t\tif( next ){\n\t\t\t\t\t\tself.setActiveOption(next);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// refreshOptions after setActiveOption(),\n\t\t\t\t// otherwise setActiveOption() will be called by refreshOptions() with the wrong value\n\t\t\t\tif( !self.isPending ){\n\t\t\t\t\tself.refreshOptions(self.isFocused && inputMode !== 'single');\n\t\t\t\t}\n\n\t\t\t\t// hide the menu if the maximum number of items have been selected or no options are left\n\t\t\t\tif ( !options.length || self.isFull()) {\n\t\t\t\t\tself.close();\n\t\t\t\t} else if (!self.isPending) {\n\t\t\t\t\tself.positionDropdown();\n\t\t\t\t}\n\n\t\t\t\tself.trigger('item_add', hashed, item);\n\n\t\t\t\tif (!self.isPending) {\n\t\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!self.isPending || (!wasFull && self.isFull())) {\n\t\t\t\tself.refreshState();\n\t\t\t}\n\n\t\t});\n\t}\n\n\t/**\n\t * Removes the selected item matching\n\t * the provided value.\n\t *\n\t */\n\tremoveItem( item:string|TomItem|null=null, silent?:boolean ){\n\t\tconst self\t\t= this;\n\t\titem\t\t\t= self.getItem(item);\n\n\t\tif( !item ) return;\n\n\t\tvar i,idx;\n\t\tconst value\t= item.dataset.value;\n\t\ti = nodeIndex(item);\n\n\t\titem.remove();\n\t\tif( item.classList.contains('active') ){\n\t\t\tidx = self.activeItems.indexOf(item);\n\t\t\tself.activeItems.splice(idx, 1);\n\t\t\tremoveClasses(item,'active');\n\t\t}\n\n\t\tself.items.splice(i, 1);\n\t\tself.lastQuery = null;\n\t\tif (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t\t\tself.removeOption(value, silent);\n\t\t}\n\n\t\tif (i < self.caretPos) {\n\t\t\tself.setCaret(self.caretPos - 1);\n\t\t}\n\n\t\tself.updateOriginalInput({silent: silent});\n\t\tself.refreshState();\n\t\tself.positionDropdown();\n\t\tself.trigger('item_remove', value, item);\n\n\t}\n\n\t/**\n\t * Invokes the `create` method provided in the\n\t * TomSelect options that should provide the data\n\t * for the new item, given the user input.\n\t *\n\t * Once this completes, it will be added\n\t * to the item list.\n\t *\n\t */\n\tcreateItem( input:null|string=null, triggerDropdown:boolean=true, callback:TomCreateCallback = ()=>{} ):boolean{\n\t\tvar self  = this;\n\t\tvar caret = self.caretPos;\n\t\tvar output;\n\t\tinput = input || self.inputValue();\n\n\t\tif (!self.canCreate(input)) {\n\t\t\tcallback();\n\t\t\treturn false;\n\t\t}\n\n\t\tself.lock();\n\n\t\tvar created = false;\n\t\tvar create = (data?:boolean|TomOption) => {\n\t\t\tself.unlock();\n\n\t\t\tif (!data || typeof data !== 'object') return callback();\n\t\t\tvar value = hash_key(data[self.settings.valueField]);\n\t\t\tif( typeof value !== 'string' ){\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\tself.setTextboxValue();\n\t\t\tself.addOption(data);\n\t\t\tself.setCaret(caret);\n\t\t\tself.addItem(value);\n\t\t\tself.refreshOptions(triggerDropdown && self.settings.mode !== 'single');\n\t\t\tcallback(data);\n\t\t\tcreated = true;\n\t\t};\n\n\t\tif( typeof self.settings.create === 'function' ){\n\t\t\toutput = self.settings.create.call(this, input, create);\n\t\t}else{\n\t\t\toutput = {\n\t\t\t\t[self.settings.labelField]: input,\n\t\t\t\t[self.settings.valueField]: input,\n\t\t\t};\n\t\t}\n\n\t\tif( !created ){\n\t\t\tcreate(output);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Re-renders the selected item lists.\n\t */\n\trefreshItems() {\n\t\tvar self = this;\n\t\tself.lastQuery = null;\n\n\t\tif (self.isSetup) {\n\t\t\tself.addItems(self.items);\n\t\t}\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Updates all state-dependent attributes\n\t * and CSS classes.\n\t */\n\trefreshState() {\n\t\tvar self     = this;\n\n\t\tself.refreshValidityState();\n\n\t\tvar isFull   = self.isFull();\n\n\t\tvar isLocked = self.isLocked;\n\n\t\tself.wrapper.classList.toggle('rtl',self.rtl);\n\n\t\tvar classList = self.control.classList;\n\n\t\tclassList.toggle('focus', self.isFocused)\n\t\tclassList.toggle('disabled', self.isDisabled)\n\t\tclassList.toggle('required', self.isRequired)\n\t\tclassList.toggle('invalid', self.isInvalid)\n\t\tclassList.toggle('locked', isLocked)\n\t\tclassList.toggle('full', isFull)\n\t\tclassList.toggle('not-full', !isFull)\n\t\tclassList.toggle('input-active', self.isFocused && !self.isInputHidden)\n\t\tclassList.toggle('dropdown-active', self.isOpen)\n\t\tclassList.toggle('has-options', isEmptyObject(self.options) )\n\t\tclassList.toggle('has-items', self.items.length > 0);\n\n\t}\n\n\n\t/**\n\t * Update the `required` attribute of both input and control input.\n\t *\n\t * The `required` property needs to be activated on the control input\n\t * for the error to be displayed at the right place. `required` also\n\t * needs to be temporarily deactivated on the input since the input is\n\t * hidden and can't show errors.\n\t */\n\trefreshValidityState() {\n\t\tvar self = this;\n\n\t\tif( !self.input.checkValidity ){\n\t\t\treturn;\n\t\t}\n\n\t\t// if required, make sure the input required attribute = true so checkValidity() will work\n\t\tif( this.isRequired ){\n\t\t\tself.input.required = true;\n\t\t}\n\n\t\tvar invalid = !self.input.checkValidity();\n\n\t\tself.isInvalid = invalid;\n\t\tself.control_input.required = invalid;\n\n\t\tif( this.isRequired ){\n\t\t\tself.input.required = !invalid;\n\t\t}\n\t}\n\n\t/**\n\t * Determines whether or not more items can be added\n\t * to the control without exceeding the user-defined maximum.\n\t *\n\t * @returns {boolean}\n\t */\n\tisFull() {\n\t\treturn this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t}\n\n\t/**\n\t * Refreshes the original <select> or <input>\n\t * element to reflect the current state.\n\t *\n\t */\n\tupdateOriginalInput( opts:TomArgObject = {} ){\n\t\tconst self = this;\n\t\tvar i, value, option, option_el, label;\n\n\t\tif( self.is_select_tag ){\n\n\t\t\tconst selected:HTMLOptionElement[]\t\t= [];\n\n\t\t\tfunction AddSelected(option_el:HTMLOptionElement|null, value:string, label:string):HTMLOptionElement{\n\n\t\t\t\tif( !option_el ){\n\t\t\t\t\toption_el = getDom('<option value=\"' + escape_html(value) + '\">' + escape_html(label) + '</option>') as HTMLOptionElement;\n\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\tself.input.prepend(option_el);\n\t\t\t\tselected.push(option_el);\n\n\t\t\t\tsetAttr(option_el,{selected:'true'});\n\t\t\t\toption_el.selected = true;\n\n\t\t\t\treturn option_el;\n\t\t\t}\n\n\t\t\t// unselect all selected options\n\t\t\tself.input.querySelectorAll('option[selected]').forEach((option_el:Element) => {\n\t\t\t\tsetAttr(option_el,{selected:null});\n\t\t\t\t(<HTMLOptionElement>option_el).selected = false;\n\t\t\t});\n\n\n\t\t\t// nothing selected?\n\t\t\tif( self.items.length == 0 && self.settings.mode == 'single' && !self.isRequired ){\n\t\t\t\toption_el = self.input.querySelector('option[value=\"\"]') as HTMLOptionElement;\n\t\t\t\tAddSelected(option_el, \"\", \"\");\n\n\t\t\t// order selected <option> tags for values in self.items\n\t\t\t}else{\n\n\t\t\t\tfor( i = self.items.length-1; i >=0 ; i-- ){\n\t\t\t\t\tvalue\t\t\t= self.items[i];\n\t\t\t\t\toption\t\t\t= self.options[value];\n\t\t\t\t\tlabel\t\t\t= option[self.settings.labelField] || '';\n\n\t\t\t\t\tif( selected.includes(option.$option) ){\n\t\t\t\t\t\tconst reuse_opt = self.input.querySelector(`option[value=\"${addSlashes(value)}\"]:not([selected])`) as HTMLOptionElement;\n\t\t\t\t\t\tAddSelected(reuse_opt, value, label);\n\t\t\t\t\t}else{\n\t\t\t\t\t\toption.$option\t= AddSelected(option.$option, value, label);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\t\t\tself.input.value = self.getValue() as string;\n\t\t}\n\n\t\tif (self.isSetup) {\n\t\t\tif (!opts.silent) {\n\t\t\t\tself.trigger('change', self.getValue() );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Shows the autocomplete dropdown containing\n\t * the available options.\n\t */\n\topen() {\n\t\tvar self = this;\n\n\t\tif (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return;\n\t\tself.isOpen = true;\n\t\tsetAttr(self.control_input,{'aria-expanded': 'true'});\n\t\tself.refreshState();\n\t\tapplyCSS(self.dropdown,{visibility: 'hidden', display: 'block'});\n\t\tself.positionDropdown();\n\t\tapplyCSS(self.dropdown,{visibility: 'visible', display: 'block'});\n\t\tself.focus();\n\t\tself.trigger('dropdown_open', self.dropdown);\n\t}\n\n\t/**\n\t * Closes the autocomplete dropdown menu.\n\t */\n\tclose(setTextboxValue=true) {\n\t\tvar self = this;\n\t\tvar trigger = self.isOpen;\n\n\t\tif( setTextboxValue ){\n\n\t\t\t// before blur() to prevent form onchange event\n\t\t\tself.setTextboxValue();\n\n\t\t\tif (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\tself.hideInput();\n\n\t\t\t\t// Do not trigger blur while inside a blur event,\n\t\t\t\t// this fixes some weird tabbing behavior in FF and IE.\n\t\t\t\t// See #selectize.js#1164\n\t\t\t\tif( !self.tab_key ){\n\t\t\t\t\tself.blur(); // close keyboard on iOS\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tself.isOpen = false;\n\t\tsetAttr(self.control_input,{'aria-expanded': 'false'});\n\t\tapplyCSS(self.dropdown,{display: 'none'});\n\t\tif( self.settings.hideSelected ){\n\t\t\tself.clearActiveOption();\n\t\t}\n\t\tself.refreshState();\n\n\t\tif (trigger) self.trigger('dropdown_close', self.dropdown);\n\t}\n\n\t/**\n\t * Calculates and applies the appropriate\n\t * position of the dropdown if dropdownParent = 'body'.\n\t * Otherwise, position is determined by css\n\t */\n\tpositionDropdown(){\n\n\t\tif( this.settings.dropdownParent !== 'body' ){\n\t\t\treturn;\n\t\t}\n\n\t\tvar context\t\t\t= this.control;\n\t\tvar rect\t\t\t= context.getBoundingClientRect();\n\t\tvar top\t\t\t\t= context.offsetHeight + rect.top  + window.scrollY;\n\t\tvar left\t\t\t= rect.left + window.scrollX;\n\n\n\t\tapplyCSS(this.dropdown,{\n\t\t\twidth : rect.width + 'px',\n\t\t\ttop   : top + 'px',\n\t\t\tleft  : left + 'px'\n\t\t});\n\n\t}\n\n\t/**\n\t * Resets / clears all selected items\n\t * from the control.\n\t *\n\t */\n\tclear(silent?:boolean) {\n\t\tvar self = this;\n\n\t\tif (!self.items.length) return;\n\n\t\tvar items = self.controlChildren();\n\t\tfor( const item of items ){\n\t\t\titem.remove();\n\t\t}\n\n\t\tself.items = [];\n\t\tself.lastQuery = null;\n\t\tself.setCaret(0);\n\t\tself.clearActiveItems();\n\t\tself.updateOriginalInput({silent: silent});\n\t\tself.refreshState();\n\t\tself.showInput();\n\t\tself.trigger('clear');\n\t}\n\n\t/**\n\t * A helper method for inserting an element\n\t * at the current caret position.\n\t *\n\t */\n\tinsertAtCaret(el:HTMLElement) {\n\t\tvar self = this;\n\t\tvar caret\t= Math.min(self.caretPos, self.items.length);\n\t\tvar target\t= self.control;\n\n\t\tif (caret === 0) {\n\t\t\ttarget.insertBefore(el, target.firstChild);\n\t\t} else {\n\t\t\ttarget.insertBefore(el, target.children[caret]);\n\t\t}\n\n\t\tself.setCaret(caret + 1);\n\t}\n\n\t/**\n\t * Removes the current selected item(s).\n\t *\n\t */\n\tdeleteSelection(e:KeyboardEvent):boolean {\n\t\tvar direction, selection, caret, tail;\n\t\tvar self = this;\n\n\t\tdirection = (e && e.keyCode === constants.KEY_BACKSPACE) ? -1 : 1;\n\t\tselection = getSelection(self.control_input);\n\n\n\t\t// determine items that will be removed\n\t\tconst rm_items:TomItem[]\t= [];\n\n\t\tif (self.activeItems.length) {\n\n\t\t\ttail = getTail(self.activeItems, direction);\n\t\t\tcaret = nodeIndex(tail);\n\n\t\t\tif (direction > 0) { caret++; }\n\n\t\t\tfor( const item of self.activeItems ){\n\t\t\t\trm_items.push( item );\n\t\t\t}\n\n\t\t} else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t\t\tconst items = self.controlChildren();\n\t\t\tif (direction < 0 && selection.start === 0 && selection.length === 0) {\n\t\t\t\trm_items.push( items[self.caretPos - 1]);\n\n\t\t\t} else if (direction > 0 && selection.start === self.inputValue().length) {\n\t\t\t\trm_items.push(items[self.caretPos]);\n\t\t\t}\n\t\t}\n\n\t\tconst values = rm_items.map(item => item.dataset.value);\n\n\t\t// allow the callback to abort\n\t\tif (!values.length || (typeof self.settings.onDelete === 'function' && self.settings.onDelete.call(self,values,e) === false)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tpreventDefault(e,true);\n\n\t\t// perform removal\n\t\tif (typeof caret !== 'undefined') {\n\t\t\tself.setCaret(caret);\n\t\t}\n\n\t\twhile( rm_items.length ){\n\t\t\tself.removeItem(rm_items.pop());\n\t\t}\n\n\t\tself.showInput();\n\t\tself.positionDropdown();\n\t\tself.refreshOptions(false);\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Selects the previous / next item (depending on the `direction` argument).\n\t *\n\t * > 0 - right\n\t * < 0 - left\n\t *\n\t */\n\tadvanceSelection(direction:number, e?:MouseEvent|KeyboardEvent) {\n\t\tvar idx, last_active, adjacent, self = this;\n\n\t\tif (self.rtl) direction *= -1;\n\t\tif( self.inputValue().length ) return;\n\n\n\t\t// add or remove to active items\n\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) || isKeyDown('shiftKey',e) ){\n\n\t\t\tlast_active\t\t\t= self.getLastActive(direction);\n\t\t\tif( last_active ){\n\n\t\t\t\tif( !last_active.classList.contains('active') ){\n\t\t\t\t\tadjacent\t\t\t= last_active;\n\t\t\t\t}else{\n\t\t\t\t\tadjacent\t\t\t= self.getAdjacent(last_active,direction,'item');\n\t\t\t\t}\n\n\t\t\t// if no active item, get items adjacent to the control input\n\t\t\t}else if( direction > 0 ){\n\t\t\t\tadjacent\t\t\t= self.control_input.nextElementSibling;\n\t\t\t}else{\n\t\t\t\tadjacent\t\t\t= self.control_input.previousElementSibling;\n\t\t\t}\n\n\n\t\t\tif( adjacent ){\n\t\t\t\tif( adjacent.classList.contains('active') ){\n\t\t\t\t\tself.removeActiveItem(last_active);\n\t\t\t\t}\n\t\t\t\tself.setActiveItemClass(adjacent); // mark as last_active !! after removeActiveItem() on last_active\n\t\t\t}\n\n\t\t// move caret to the left or right\n\t\t}else if( self.isFocused && !self.activeItems.length ){\n\n\t\t\tself.setCaret(self.caretPos + direction);\n\n\t\t// move caret before or after selected items\n\t\t}else{\n\n\t\t\tlast_active\t\t= self.getLastActive(direction);\n\t\t\tif( last_active ){\n\t\t\t\tidx = nodeIndex(last_active);\n\t\t\t\tself.setCaret(direction > 0 ? idx + 1: idx);\n\t\t\t\tself.setActiveItem();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Get the last active item\n\t *\n\t */\n\tgetLastActive(direction?:number){\n\n\t\tlet last_active = this.control.querySelector('.last-active');\n\t\tif( last_active ){\n\t\t\treturn last_active;\n\t\t}\n\n\n\t\tvar result = this.control.querySelectorAll('.active');\n\t\tif( result ){\n\t\t\treturn getTail(result,direction);\n\t\t}\n\t}\n\n\n\t/**\n\t * Moves the caret to the specified index.\n\t *\n\t * The input must be moved by leaving it in place and moving the\n\t * siblings, due to the fact that focus cannot be restored once lost\n\t * on mobile webkit devices\n\t *\n\t */\n\tsetCaret(new_pos:number) {\n\t\tvar self = this;\n\n\t\tif( self.settings.mode === 'single' || self.settings.controlInput ) {\n\t\t\tnew_pos = self.items.length;\n\t\t} else {\n\t\t\tnew_pos = Math.max(0, Math.min(self.items.length, new_pos));\n\n\t\t\tif( new_pos != self.caretPos && !self.isPending ){\n\n\t\t\t\tself.controlChildren().forEach((child,j) => {\n\t\t\t\t\tif( j < new_pos ){\n\t\t\t\t\t\tself.control_input.insertAdjacentElement('beforebegin', child );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.control.appendChild( child );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tself.caretPos = new_pos;\n\t}\n\n\t/**\n\t * Return list of item dom elements\n\t *\n\t */\n\tcontrolChildren():TomItem[]{\n\t\treturn Array.from( this.control.getElementsByClassName(this.settings.itemClass) ) as TomItem[];\n\t}\n\n\t/**\n\t * Disables user input on the control. Used while\n\t * items are being asynchronously created.\n\t */\n\tlock() {\n\t\tthis.close();\n\t\tthis.isLocked = true;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Re-enables user input on the control.\n\t */\n\tunlock() {\n\t\tthis.isLocked = false;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Disables user input on the control completely.\n\t * While disabled, it cannot receive focus.\n\t */\n\tdisable() {\n\t\tvar self = this;\n\t\tself.input.disabled\t\t\t\t= true;\n\t\tself.control_input.disabled\t\t= true;\n\t\tself.control_input.tabIndex\t\t= -1;\n\t\tself.isDisabled\t\t\t\t\t= true;\n\t\tself.lock();\n\t}\n\n\t/**\n\t * Enables the control so that it can respond\n\t * to focus and user input.\n\t */\n\tenable() {\n\t\tvar self = this;\n\t\tself.input.disabled\t\t\t\t= false;\n\t\tself.control_input.disabled\t\t= false;\n\t\tself.control_input.tabIndex\t\t= self.tabIndex;\n\t\tself.isDisabled\t\t\t\t\t= false;\n\t\tself.unlock();\n\t}\n\n\t/**\n\t * Completely destroys the control and\n\t * unbinds all event listeners so that it can\n\t * be garbage collected.\n\t */\n\tdestroy() {\n\t\tvar self = this;\n\t\tvar revertSettings = self.revertSettings;\n\n\t\tself.trigger('destroy');\n\t\tself.off();\n\t\tself.wrapper.remove();\n\t\tself.dropdown.remove();\n\n\t\tself.input.innerHTML = revertSettings.innerHTML;\n\t\tself.input.tabIndex = revertSettings.tabIndex;\n\n\t\tremoveClasses(self.input,'tomselected');\n\t\tsetAttr(self.input,{hidden:null});\n\t\tself.input.required = this.isRequired;\n\n\t\tself._destroy();\n\n\t\tdelete self.input.tomselect;\n\t}\n\n\t/**\n\t * A helper method for rendering \"item\" and\n\t * \"option\" templates, given the data.\n\t *\n\t */\n\trender( templateName:TomTemplateNames, data?:any ):null|HTMLElement{\n\n\t\tif( typeof this.settings.render[templateName] !== 'function' ){\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this._render(templateName, data);\n\t}\n\n\t/**\n\t * _render() can be called directly when we know we don't want to hit the cache\n\t * return type could be null for some templates, we need https://github.com/microsoft/TypeScript/issues/33014\n\t */\n\t_render( templateName:TomTemplateNames, data?:any ):HTMLElement{\n\t\tvar value = '', id, html;\n\t\tconst self = this;\n\n\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\tvalue\t= get_hash(data[self.settings.valueField]);\n\t\t\thtml\t= self.rendered(templateName,value);\n\n\t\t\tif( html ){\n\t\t\t\treturn html;\n\t\t\t}\n\n\t\t}\n\n\t\t// render markup\n\t\thtml = self.settings.render[templateName].call(this, data, escape_html);\n\n\t\tif( html == null ){\n\t\t\treturn html;\n\t\t}\n\n\t\thtml = getDom( html );\n\n\t\t// add mandatory attributes\n\t\tif (templateName === 'option' || templateName === 'option_create') {\n\n\t\t\tif( data[self.settings.disabledField] ){\n\t\t\t\tsetAttr(html,{'aria-disabled':'true'});\n\t\t\t}else{\n\t\t\t\tsetAttr(html,{'data-selectable': ''});\n\t\t\t}\n\n\t\t}else if (templateName === 'optgroup') {\n\t\t\tid = data.group[self.settings.optgroupValueField];\n\t\t\tsetAttr(html,{'data-group': id});\n\t\t\tif(data.group[self.settings.disabledField]) {\n\t\t\t\tsetAttr(html,{'data-disabled': ''});\n\t\t\t}\n\t\t}\n\n\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\tsetAttr(html,{'data-value': value });\n\n\n\t\t\t// make sure we have some classes if a template is overwritten\n\t\t\tif( templateName === 'item' ){\n\t\t\t\taddClasses(html,self.settings.itemClass);\n\t\t\t}else{\n\t\t\t\taddClasses(html,self.settings.optionClass);\n\t\t\t\tsetAttr(html,{\n\t\t\t\t\trole:'option',\n\t\t\t\t\tid:data.$id\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// update cache\n\t\t\tself.renderCache[templateName][value] = html;\n\n\t\t}\n\n\t\treturn html;\n\t}\n\n\t/**\n\t * Return the previously rendered item or option\n\t *\n\t */\n\trendered( templateName:TomTemplateNames, value:null|string ):null|HTMLElement{\n\t\treturn value !== null && this.renderCache[templateName].hasOwnProperty(value)\n\t\t\t? this.renderCache[templateName][value]\n\t\t\t: null;\n\t}\n\n\t/**\n\t * Clears the render cache for a template. If\n\t * no template is given, clears all render\n\t * caches.\n\t *\n\t */\n\tclearCache( templateName?:'item'|'option' ):void{\n\t\tvar self = this;\n\n\t\t// remove options from DOM\n\t\tif(templateName === void 0 || 'option' ){\n\t\t\tfor( let key in self.options){\n\t\t\t\tconst el = self.getOption(key);\n\t\t\t\tif( el ) el.remove();\n\t\t\t}\n\t\t}\n\n\t\tif( templateName === void 0 ){\n\t\t\tself.renderCache = {'item':{},'option':{}};\n\t\t} else {\n\t\t\tself.renderCache[templateName] = {};\n\t\t}\n\n\t}\n\n\t/**\n\t * Determines whether or not to display the\n\t * create item prompt, given a user input.\n\t *\n\t */\n\tcanCreate( input:string ):boolean {\n\t\treturn this.settings.create && (input.length > 0) && (this.settings.createFilter as TomCreateFilter ).call(this, input);\n\t}\n\n\n\t/**\n\t * Wraps this.`method` so that `new_fn` can be invoked 'before', 'after', or 'instead' of the original method\n\t *\n\t * this.hook('instead','onKeyDown',function( arg1, arg2 ...){\n\t *\n\t * });\n\t */\n\thook( when:string, method:string, new_fn:any ){\n\t\tvar self = this;\n\t\tvar orig_method = self[method];\n\n\n\t\tself[method] = function(){\n\t\t\tvar result, result_new;\n\n\t\t\tif( when === 'after' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\tresult_new = new_fn.apply(self, arguments );\n\n\t\t\tif( when === 'instead' ){\n\t\t\t\treturn result_new;\n\t\t\t}\n\n\t\t\tif( when === 'before' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t}\n\n};\n","/**\n * microplugin.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\ntype TSettings = {\n\t[key:string]:any\n}\n\ntype TPlugins = {\n\tnames: string[],\n\tsettings: TSettings,\n\trequested: {[key:string]:boolean},\n\tloaded: {[key:string]:any}\n};\n\ntype TPluginItem = {name:string,options:{}};\ntype TPluginHash = {[key:string]:{}};\n\n\n\n\nexport default function MicroPlugin(Interface: any ){\n\n\tInterface.plugins = {};\n\n\treturn class extends Interface{\n\n\t\tpublic plugins:TPlugins = {\n\t\t\tnames     : [],\n\t\t\tsettings  : {},\n\t\t\trequested : {},\n\t\t\tloaded    : {}\n\t\t};\n\n\t\t/**\n\t\t * Registers a plugin.\n\t\t *\n\t\t * @param {function} fn\n\t\t */\n\t\tstatic define(name:string, fn:(this:any,settings:TSettings)=>any){\n\t\t\tInterface.plugins[name] = {\n\t\t\t\t'name' : name,\n\t\t\t\t'fn'   : fn\n\t\t\t};\n\t\t}\n\n\n\t\t/**\n\t\t * Initializes the listed plugins (with options).\n\t\t * Acceptable formats:\n\t\t *\n\t\t * List (without options):\n\t\t *   ['a', 'b', 'c']\n\t\t *\n\t\t * List (with options):\n\t\t *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n\t\t *\n\t\t * Hash (with options):\n\t\t *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n\t\t *\n\t\t * @param {array|object} plugins\n\t\t */\n\t\tinitializePlugins(plugins:string[]|TPluginItem[]|TPluginHash) {\n\t\t\tvar key, name;\n\t\t\tconst self  = this;\n\t\t\tconst queue:string[] = [];\n\n\t\t\tif (Array.isArray(plugins)) {\n\t\t\t\tplugins.forEach((plugin:string|TPluginItem)=>{\n\t\t\t\t\tif (typeof plugin === 'string') {\n\t\t\t\t\t\tqueue.push(plugin);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.plugins.settings[plugin.name] = plugin.options;\n\t\t\t\t\t\tqueue.push(plugin.name);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (plugins) {\n\t\t\t\tfor (key in plugins) {\n\t\t\t\t\tif (plugins.hasOwnProperty(key)) {\n\t\t\t\t\t\tself.plugins.settings[key] = plugins[key];\n\t\t\t\t\t\tqueue.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile( name = queue.shift() ){\n\t\t\t\tself.require(name);\n\t\t\t}\n\t\t}\n\n\t\tloadPlugin(name:string) {\n\t\t\tvar self    = this;\n\t\t\tvar plugins = self.plugins;\n\t\t\tvar plugin  = Interface.plugins[name];\n\n\t\t\tif (!Interface.plugins.hasOwnProperty(name)) {\n\t\t\t\tthrow new Error('Unable to find \"' +  name + '\" plugin');\n\t\t\t}\n\n\t\t\tplugins.requested[name] = true;\n\t\t\tplugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n\t\t\tplugins.names.push(name);\n\t\t}\n\n\t\t/**\n\t\t * Initializes a plugin.\n\t\t *\n\t\t */\n\t\trequire(name:string) {\n\t\t\tvar self = this;\n\t\t\tvar plugins = self.plugins;\n\n\t\t\tif (!self.plugins.loaded.hasOwnProperty(name)) {\n\t\t\t\tif (plugins.requested[name]) {\n\t\t\t\t\tthrow new Error('Plugin has circular dependency (\"' + name + '\")');\n\t\t\t\t}\n\t\t\t\tself.loadPlugin(name);\n\t\t\t}\n\n\t\t\treturn plugins.loaded[name];\n\t\t}\n\n\t};\n\n}\n","/**\n * Plugin: \"change_listener\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select.js';\nimport getSettings from '../../getSettings.js';\nimport { TomSettings } from '../../types/index';\nimport { addEvent } from '../../utils';\n\nTomSelect.define('change_listener',function(this:TomSelect){\n\tconst self\t\t= this;\n\tconst joined\t= (arr:string[]):string => arr.join(self.settings.delimiter);\n\n\taddEvent(self.input,'change',()=>{\n\n\t\tvar settings\t= getSettings( self.input, {delimiter:self.settings.delimiter} as TomSettings );\n\n\t\t// prevent infinite loops\n\t\tif( joined(self.items) == joined(settings.items) ){\n\t\t\treturn;\n\t\t}\n\n\t\tself.setupOptions(settings.options,settings.optgroups);\n\t\tself.setValue(settings.items);\n\t});\n\n});\n","/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\nimport { preventDefault, hash_key } from '../../utils';\nimport { getDom } from '../../vanilla';\n\n\nTomSelect.define('checkbox_options',function(this:TomSelect) {\n\tvar self = this;\n\tvar orig_onOptionSelect = self.onOptionSelect;\n\n\tself.settings.hideSelected = false;\n\n\n\t// update the checkbox for an option\n\tvar UpdateCheckbox = function(option:HTMLElement){\n\t\tsetTimeout(()=>{\n\t\t\tvar checkbox = option.querySelector('input') as HTMLInputElement;\n\t\t\tif( option.classList.contains('selected') ){\n\t\t\t\tcheckbox.checked = true;\n\t\t\t}else{\n\t\t\t\tcheckbox.checked = false;\n\t\t\t}\n\t\t},1);\n\t};\n\n\t// add checkbox to option template\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_option = self.settings.render.option;\n\n\t\tself.settings.render.option = (data, escape_html) => {\n\t\t\tvar rendered = getDom(orig_render_option.call(self, data, escape_html));\n\t\t\tvar checkbox = document.createElement('input');\n\t\t\tcheckbox.addEventListener('click',function(evt){\n\t\t\t\tpreventDefault(evt);\n\t\t\t});\n\n\t\t\tcheckbox.type = 'checkbox';\n\t\t\tconst hashed = hash_key(data[self.settings.valueField]);\n\n\n\t\t\tif( hashed && self.items.indexOf(hashed) > -1 ){\n\t\t\t\tcheckbox.checked = true;\n\t\t\t}\n\n\t\t\trendered.prepend(checkbox);\n\t\t\treturn rendered;\n\t\t};\n\t});\n\n\t// uncheck when item removed\n\tself.on('item_remove',(value:string) => {\n\t\tvar option = self.getOption(value);\n\n\t\tif( option ){ // if dropdown hasn't been opened yet, the option won't exist\n\t\t\toption.classList.remove('selected'); // selected class won't be removed yet\n\t\t\tUpdateCheckbox(option);\n\t\t}\n\t});\n\n\n\t// remove items when selected option is clicked\n\tself.hook('instead','onOptionSelect',( evt:KeyboardEvent, option:HTMLElement )=>{\n\n\t\tif( option.classList.contains('selected') ){\n\t\t\toption.classList.remove('selected')\n\t\t\tself.removeItem(option.dataset.value);\n\t\t\tself.refreshOptions();\n\t\t\tpreventDefault(evt,true);\n\t\t\treturn;\n        }\n\n\t\torig_onOptionSelect.call(self, evt, option);\n\n\t\tUpdateCheckbox(option);\n\t});\n\n\n});\n","/**\n * Plugin: \"dropdown_header\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select.js';\nimport { getDom } from '../../vanilla';\nimport { CBOptions } from './types';\n\nTomSelect.define('clear_button',function(this:TomSelect, userOptions:CBOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\tclassName: 'clear-button',\n\t\ttitle: 'Clear All',\n\t\thtml: (data:CBOptions) => {\n\t\t\treturn `<div class=\"${data.className}\" title=\"${data.title}\">&times;</div>`;\n\t\t}\n\t}, userOptions);\n\n\tself.on('initialize',()=>{\n\t\tvar button = getDom(options.html(options));\n\t\tbutton.addEventListener('click',(evt)=>{\n\t\t\tself.clear();\n\t\t\tevt.preventDefault();\n\t\t\tevt.stopPropagation();\n\t\t});\n\t\tself.control.appendChild(button);\n\t});\n\n});\n","/**\n * Plugin: \"drag_drop\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\n\nTomSelect.define('drag_drop',function(this:TomSelect) {\n\tvar self = this;\n\tif (!$.fn.sortable) throw new Error('The \"drag_drop\" plugin requires jQuery UI \"sortable\".');\n\tif (self.settings.mode !== 'multi') return;\n\n\tvar orig_lock\t\t= self.lock;\n\tvar orig_unlock\t\t= self.unlock;\n\n\tself.hook('instead','lock',()=>{\n\t\tvar sortable = $(self.control).data('sortable');\n\t\tif (sortable) sortable.disable();\n\t\treturn orig_lock.call(self);\n\t});\n\n\tself.hook('instead','unlock',()=>{\n\t\tvar sortable = $(self.control).data('sortable');\n\t\tif (sortable) sortable.enable();\n\t\treturn orig_unlock.call(self);\n\t});\n\n\tself.on('initialize',()=>{\n\t\tvar $control = $(self.control).sortable({\n\t\t\titems: '[data-value]',\n\t\t\tforcePlaceholderSize: true,\n\t\t\tdisabled: self.isLocked,\n\t\t\tstart: (e, ui) => {\n\t\t\t\tui.placeholder.css('width', ui.helper.css('width'));\n\t\t\t\t$control.css({overflow: 'visible'});\n\t\t\t},\n\t\t\tstop: ()=>{\n\t\t\t\t$control.css({overflow: 'hidden'});\n\n\t\t\t\tvar values:string[] = [];\n\t\t\t\t$control.children('[data-value]').each(function(this:HTMLElement){\n\t\t\t\t\tif( this.dataset.value ) values.push(this.dataset.value);\n\t\t\t\t});\n\n\t\t\t\tself.setValue(values);\n\t\t\t}\n\t\t});\n\n\t});\n\n});\n","/**\n * Plugin: \"dropdown_header\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select.js';\nimport { getDom } from '../../vanilla';\nimport { preventDefault } from '../../utils';\nimport { DHOptions } from './types';\n\nTomSelect.define('dropdown_header',function(this:TomSelect, userOptions:DHOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\ttitle         : 'Untitled',\n\t\theaderClass   : 'dropdown-header',\n\t\ttitleRowClass : 'dropdown-header-title',\n\t\tlabelClass    : 'dropdown-header-label',\n\t\tcloseClass    : 'dropdown-header-close',\n\n\t\thtml: (data:DHOptions) => {\n\t\t\treturn (\n\t\t\t\t'<div class=\"' + data.headerClass + '\">' +\n\t\t\t\t\t'<div class=\"' + data.titleRowClass + '\">' +\n\t\t\t\t\t\t'<span class=\"' + data.labelClass + '\">' + data.title + '</span>' +\n\t\t\t\t\t\t'<a class=\"' + data.closeClass + '\">&times;</a>' +\n\t\t\t\t\t'</div>' +\n\t\t\t\t'</div>'\n\t\t\t);\n\t\t}\n\t}, userOptions);\n\n\tself.on('initialize',()=>{\n\t\tvar header = getDom(options.html(options));\n\n\t\tvar close_link = header.querySelector('.'+options.closeClass);\n\t\tif( close_link ){\n\t\t\tclose_link.addEventListener('click',(evt)=>{\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t\tself.close();\n\t\t\t});\n\t\t}\n\n\t\tself.dropdown.insertBefore(header, self.dropdown.firstChild);\n\t});\n\n});\n","/**\n * Plugin: \"dropdown_input\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select.js';\nimport * as constants from '../../constants.js';\nimport { getDom, setAttr } from '../../vanilla';\nimport { addEvent } from '../../utils';\n\n\nTomSelect.define('dropdown_input',function(this:TomSelect) {\n\tvar self = this;\n\n\tvar input = self.settings.controlInput || '<input type=\"text\" autocomplete=\"off\" class=\"dropdown-input\" />';\n\tinput = getDom( input ) as HTMLInputElement;\n\n\tif (self.settings.placeholder) {\n\t\tsetAttr(input,{placeholder:self.settings.placeholder});\n\t}\n\n\tself.settings.controlInput = input;\n\tself.settings.shouldOpen = true; // make sure the input is shown even if there are no options to display in the dropdown\n\n\tself.on('initialize',()=>{\n\n\t\t// open/close dropdown when tabbing focus on wrapper\n\t\taddEvent(self.wrapper,'focus', (evt) => {\n\t\t\tself.onFocus(evt as MouseEvent)\n\t\t});\n\t\t\n\t\tconst setTabIndex = () => {\n\t\t\tsetAttr(self.wrapper,{tabindex:self.input.disabled ? '-1' : self.tabIndex});\n\t\t};\n\t\t\n\t\tself.on('dropdown_close',setTabIndex);\n\t\tself.on('dropdown_open',() => setAttr(self.wrapper,{tabindex:'-1'}) );\n\t\tsetTabIndex();\n\n\n\t\t// keyboard navigation\n\t\taddEvent(self.wrapper,'keypress',(evt) => {\n\n\t\t\tif( self.control.contains(evt.target as HTMLElement) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif( self.dropdown.contains(evt.target as HTMLElement) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// open dropdown on enter when wrapper is tab-focused\n\t\t\tswitch( (<KeyboardEvent>evt).keyCode ){\n\t\t\t\tcase constants.KEY_RETURN:\n\t\t\t\t\tself.onClick();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t});\n\n\t\tlet div = getDom('<div class=\"dropdown-input-wrap\">');\n\t\tdiv.appendChild(input);\n\t\tself.dropdown.insertBefore(div, self.dropdown.firstChild);\n\t});\n\n});\n","/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\nimport { addEvent } from '../../utils';\n\nTomSelect.define('input_autogrow', function(this:TomSelect) {\n\n\tvar self\t\t\t\t\t= this;\n\n\tself.on('initialize',()=>{\n\n\n\t\tvar test_input\t\t\t\t= document.createElement('span');\n\t\tvar control\t\t\t\t\t= self.control_input;\n\t\ttest_input.style.cssText\t= 'position:absolute; top:-99999px; left:-99999px; width:auto; padding:0; white-space:pre; ';\n\n\t\tself.wrapper.appendChild(test_input);\n\n\n\t\tvar transfer_styles\t\t\t= [ 'letterSpacing', 'fontSize', 'fontFamily', 'fontWeight', 'textTransform' ];\n\n\t\tfor( const style_name of transfer_styles ){\n\t\t\t// @ts-ignore TS7015 https://stackoverflow.com/a/50506154/697576\n\t\t\ttest_input.style[style_name] = control.style[style_name];\n\t\t}\n\n\n\t\t/**\n\t\t * Set the control width\n\t\t *\n\t\t */\n\t\tvar resize = ()=>{\n\t\t\tif( self.items.length > 0 ){\n\t\t\t\ttest_input.textContent\t= control.value;\n\t\t\t\tcontrol.style.width\t\t= test_input.clientWidth+'px';\n\t\t\t}else{\n\t\t\t\tcontrol.style.width\t\t= '';\n\t\t\t}\n\n\t\t};\n\n\t\tresize();\n\t\tself.on('update item_add item_remove',resize);\n\t\taddEvent(control,'input', resize );\n\t\taddEvent(control,'keyup', resize );\n\t\taddEvent(control,'blur', resize );\n\t\taddEvent(control,'update', resize );\n\t});\n\n});\n","/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\n\nTomSelect.define('no_backspace_delete', function(this:TomSelect) {\n\tvar self = this;\n\tvar orig_deleteSelection = self.deleteSelection;\n\n\n\tthis.hook('instead','deleteSelection',(evt:KeyboardEvent) => {\n\n\t\tif( self.activeItems.length ){\n\t\t\treturn orig_deleteSelection.call(self, evt);\n\t\t}\n\n\t\treturn false;\n\t});\n\n});\n","/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\n\nTomSelect.define('no_active_items', function(this:TomSelect) {\n\tthis.hook('instead','setActiveItem',() => {});\n\tthis.hook('instead','selectAll',() => {});\n});\n","/**\n * Plugin: \"optgroup_columns\" (Tom Select.js)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select.js';\nimport * as constants from '../../constants.js';\nimport { parentMatch, nodeIndex } from '../../vanilla';\n\nTomSelect.define('optgroup_columns', function(this:TomSelect) {\n\tvar self = this;\n\n\tvar orig_keydown = self.onKeyDown;\n\n\tself.hook('instead','onKeyDown',(evt:KeyboardEvent)=>{\n\t\tvar index, option, options, optgroup;\n\n\t\tif( !self.isOpen || !(evt.keyCode === constants.KEY_LEFT || evt.keyCode === constants.KEY_RIGHT)) {\n\t\t\treturn orig_keydown.call(self,evt);\n\t\t}\n\n\t\toptgroup\t\t\t= parentMatch(self.activeOption,'[data-group]');\n\t\tindex\t\t\t\t= nodeIndex(self.activeOption,'[data-selectable]');\n\n\t\tif( !optgroup ){\n\t\t\treturn;\n\t\t}\n\n\t\tif( evt.keyCode === constants.KEY_LEFT ){\n\t\t\toptgroup = optgroup.previousSibling;\n\t\t} else {\n\t\t\toptgroup = optgroup.nextSibling;\n\t\t}\n\n\t\tif( !optgroup ){\n\t\t\treturn;\n\t\t}\n\n\t\toptions\t\t\t\t= (<HTMLOptGroupElement>optgroup).querySelectorAll('[data-selectable]');\n\t\toption\t\t\t\t= options[ Math.min(options.length - 1, index) ] as HTMLElement;\n\n\t\tif( option ){\n\t\t\tself.setActiveOption(option);\n\t\t}\n\n\t});\n\n});\n","/**\n * Plugin: \"remove_button\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\nimport { getDom } from '../../vanilla';\nimport { escape_html, preventDefault, addEvent } from '../../utils';\nimport { TomOption } from '../../types/index';\nimport { RBOptions } from './types';\n\n\nTomSelect.define('remove_button',function(this:TomSelect, userOptions:RBOptions ){\n\n\tconst options = Object.assign({\n\t\t\tlabel     : '&times;',\n\t\t\ttitle     : 'Remove',\n\t\t\tclassName : 'remove',\n\t\t\tappend    : true\n\t\t}, userOptions);\n\n\n\t//options.className = 'remove-single';\n\tvar self\t\t\t= this;\n\n\t// override the render method to add remove button to each item\n\tif( !options.append ){\n\t\treturn;\n\t}\n\n\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_item = self.settings.render.item;\n\n\t\tself.settings.render.item = (data:TomOption, escape:typeof escape_html) => {\n\n\t\t\tvar rendered = getDom(orig_render_item.call(self, data, escape));\n\n\t\t\tvar close_button = getDom(html);\n\t\t\trendered.appendChild(close_button);\n\n\t\t\taddEvent(close_button,'mousedown',(evt) => {\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t});\n\n\t\t\taddEvent(close_button,'click',(evt) => {\n\n\t\t\t\t// propagating will trigger the dropdown to show for single mode\n\t\t\t\tpreventDefault(evt,true);\n\n\t\t\t\tif (self.isLocked) return;\n\n\t\t\t\tvar value = rendered.dataset.value;\n\t\t\t\tself.removeItem(value);\n\t\t\t\tself.refreshOptions(false);\n\t\t\t});\n\n\t\t\treturn rendered;\n\t\t};\n\n\t});\n\n\n});\n","/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\nimport { TomOption } from '../../types/index';\n\ntype TPluginOptions = {\n\ttext?:(option:TomOption)=>string,\n};\n\nTomSelect.define('restore_on_backspace',function(this:TomSelect, userOptions:TPluginOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\ttext: (option:TomOption) => {\n\t\t\treturn option[self.settings.labelField];\n\t\t}\n\t},userOptions);\n\n\tself.on('item_remove',function(value:string){\n\t\tif( self.control_input.value.trim() === '' ){\n\t\t\tvar option = self.options[value];\n\t\t\tif( option ){\n\t\t\t\tself.setTextboxValue(options.text.call(self, option));\n\t\t\t}\n\t\t}\n\t});\n\n});\n","/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\nimport { TomOption } from '../../types/index';\nimport { addClasses } from '../../vanilla';\n\n\nTomSelect.define('virtual_scroll',function(this:TomSelect) {\n\tconst self\t\t\t\t\t\t\t= this;\n\tconst orig_canLoad\t\t\t\t\t= self.canLoad;\n\tconst orig_clearActiveOption\t\t= self.clearActiveOption;\n\tconst orig_loadCallback\t\t\t\t= self.loadCallback;\n\n\tvar pagination:{[key:string]:any}\t= {};\n\tvar dropdown_content:HTMLElement;\n\tvar loading_more\t\t\t\t\t= false;\n\n\n\tif( !self.settings.firstUrl ){\n\t\tthrow 'virtual_scroll plugin requires a firstUrl() method';\n\t\treturn;\n\t}\n\n\n\t// in order for virtual scrolling to work,\n\t// options need to be ordered the same way they're returned from the remote data source\n\tself.settings.sortField\t\t\t= [{field:'$order'},{field:'$score'}];\n\n\n\t// can we load more results for given query?\n\tfunction canLoadMore(query:string):boolean{\n\n\t\tif( typeof self.settings.maxOptions === 'number' && dropdown_content.children.length >= self.settings.maxOptions ){\n\t\t\treturn false;\n\t\t}\n\n\t\tif( (query in pagination) && pagination[query] ){\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\n\t// set the next url that will be\n\tself.setNextUrl = function(value:string,next_url:any):void{\n\t\tpagination[value] = next_url;\n\t};\n\n\t// getUrl() to be used in settings.load()\n\tself.getUrl = function(query:string):any{\n\n\t\tif( query in pagination ){\n\t\t\tconst next_url = pagination[query];\n\t\t\tpagination[query] = false;\n\t\t\treturn next_url;\n\t\t}\n\n\t\t// if the user goes back to a previous query\n\t\t// we need to load the first page again\n\t\tpagination = {};\n\n\t\treturn self.settings.firstUrl(query);\n\t};\n\n\t// don't clear the active option (and cause unwanted dropdown scroll)\n\t// while loading more results\n\tself.hook('instead','clearActiveOption',()=>{\n\n\t\tif( loading_more ){\n\t\t\treturn;\n\t\t}\n\n\t\treturn orig_clearActiveOption.call(self);\n\t});\n\n\t// override the canLoad method\n\tself.hook('instead','canLoad',(query:string)=>{\n\n\t\t// first time the query has been seen\n\t\tif( !(query in pagination) ){\n\t\t\treturn orig_canLoad.call(self,query);\n\t\t}\n\n\t\treturn canLoadMore(query);\n\t});\n\n\n\t// wrap the load\n\tself.hook('instead','loadCallback',( options:TomOption[], optgroups:TomOption[])=>{\n\n\t\tif( !loading_more ){\n\t\t\tself.clearOptions();\n\t\t}\n\n\t\torig_loadCallback.call( self, options, optgroups);\n\n\t\tloading_more = false;\n\t});\n\n\n\t// add templates to dropdown\n\t//\tloading_more if we have another url in the queue\n\t//\tno_more_results if we don't have another url in the queue\n\tself.hook('after','refreshOptions',()=>{\n\n\t\tconst query\t\t= self.lastValue;\n\t\tvar option;\n\n\t\tif( canLoadMore(query) ){\n\t\t\toption = self.render('loading_more',{query:query});\n\t\t\tif( option ) option.setAttribute('data-selectable',''); // so that navigating dropdown with [down] keypresses can navigate to this node\n\n\t\t}else if( (query in pagination) && !dropdown_content.querySelector('.no-results') ){\n\t\t\toption = self.render('no_more_results',{query:query});\n\t\t}\n\n\t\tif( option ){\n\t\t\taddClasses(option,self.settings.optionClass);\n\t\t\tdropdown_content.append( option );\n\t\t}\n\n\t});\n\n\n\t// add scroll listener and default templates\n\tself.on('initialize',()=>{\n\t\tdropdown_content = self.dropdown_content;\n\n\t\t// default templates\n\t\tself.settings.render = Object.assign({}, {\n\t\t\tloading_more:function(){\n\t\t\t\treturn `<div class=\"loading-more-results\">Loading more results ... </div>`;\n\t\t\t},\n\t\t\tno_more_results:function(){\n\t\t\t\treturn `<div class=\"no-more-results\">No more results</div>`;\n\t\t\t}\n\t\t},self.settings.render);\n\n\n\t\t// watch dropdown content scroll position\n\t\tdropdown_content.addEventListener('scroll',function(){\n\n\t\t\tconst scroll_percent = dropdown_content.clientHeight / (dropdown_content.scrollHeight - dropdown_content.scrollTop);\n\t\t\tif( scroll_percent < 0.95 ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// !important: this will get checked again in load() but we still need to check here otherwise loading_more will be set to true\n\t\t\tif( !canLoadMore(self.lastValue) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// don't call load() too much\n\t\t\tif( loading_more ) return;\n\n\n\t\t\tloading_more = true;\n\t\t\tself.load.call(self,self.lastValue);\n\t\t});\n\t});\n\n});\n"],"names":["forEvents","events","callback","split","forEach","event","MicroEvent","constructor","_events","on","fct","this","push","off","n","arguments","length","splice","indexOf","trigger","args","self","apply","code_points","asciifold","str","normalize","replace","toLowerCase","diacritics","diacriticRegexPoints","regex","latin_convert","code_range","i","diacritic","String","fromCharCode","latin","toUpperCase","generateDiacritics","hasOwnProperty","RegExp","getAttr","obj","name","getAttrNesting","part","names","shift","scoreValue","value","token","weight","score","pos","search","string","escape_regex","propToArray","key","Array","isArray","iterate","object","cmp","a","b","Sifter","items","settings","tokenize","query","respect_word_boundaries","weights","tokens","words","field_regex","Object","keys","map","join","word","field_match","field","match","getScoreFunction","options","prepareSearch","_getScoreFunction","token_count","fields","field_count","getAttrFn","scoreObject","data","sum","conjunction","getSortFunction","_getSortFunction","implicit_score","sort","sort_empty","sort_flds","multipliers","get_field","result","id","unshift","direction","sort_flds_count","sort_fld","multiplier","optsUser","assign","trim","total","nesting","fn_score","item","filter","fn_sort","limit","slice","getDom","jquery","HTMLElement","div","document","createElement","innerHTML","firstChild","querySelector","triggerEvent","dom_el","event_name","createEvent","initEvent","dispatchEvent","applyCSS","css","style","addClasses","elmts","classes","norm_classes","classesArray","castAsArray","el","cls","classList","add","removeClasses","remove","_classes","concat","Boolean","arg","parentMatch","target","selector","wrapper","contains","matches","parentNode","getTail","list","nodeIndex","amongst","nodeName","previousElementSibling","setAttr","attrs","attr","val","removeAttribute","setAttribute","replaceNode","existing","replacement","replaceChild","highlight","element","highlightRecursive","node","nodeType","spannode","className","middlebit","splitText","index","middleclone","cloneNode","appendChild","highlightText","childNodes","test","tagName","highlightChildren","KEY_SHORTCUT","navigator","userAgent","optgroups","plugins","delimiter","splitOn","persist","create","createOnBlur","createFilter","openOnFocus","shouldOpen","maxOptions","maxItems","hideSelected","duplicates","addPrecedence","selectOnTab","preload","allowEmptyOption","closeAfterSelect","loadThrottle","loadingClass","dataAttr","optgroupField","valueField","labelField","disabledField","optgroupLabelField","optgroupValueField","lockOptgroupOrder","sortField","searchField","searchConjunction","mode","wrapperClass","inputClass","dropdownClass","dropdownContentClass","itemClass","optionClass","dropdownParent","controlInput","copyClassesToDropdown","placeholder","hidePlaceholder","shouldLoad","render","hash_key","get_hash","escape_html","loadDebounce","fn","delay","timeout","loading","Math","max","clearTimeout","setTimeout","loadedSearches","call","debounce_events","types","type","event_args","preventDefault","evt","stop","stopPropagation","addEvent","addEventListener","isKeyDown","key_name","altKey","ctrlKey","shiftKey","metaKey","getId","existing_id","getAttribute","addSlashes","append","parent","getSettings","input","settings_user","defaults","attr_data","field_label","field_value","field_disabled","field_optgroup","field_optgroup_label","field_optgroup_value","tag_name","option","textContent","settings_element","optionsMap","group_count","readData","dataset","json","JSON","parse","addOption","group","arr","option_data","disabled","$option","selected","addGroup","optgroup","optgroup_data","children","hasAttribute","child","init_select","data_raw","opt","values","init_textbox","instance_i","TomSelect","Interface","requested","loaded","initializePlugins","queue","plugin","require","loadPlugin","Error","MicroPlugin","input_arg","dir","control_input","dropdown","control","dropdown_content","order","tabIndex","is_select_tag","rtl","inputId","_destroy","sifter","tab_key","isOpen","isDisabled","isRequired","isInvalid","isLocked","isFocused","isInputHidden","isSetup","ignoreFocus","hasOptions","currentResults","lastValue","caretPos","activeOption","activeItems","userOptions","renderCache","tomselect","window","getComputedStyle","getPropertyValue","required","setupOptions","setupCallbacks","setupTemplates","inputMode","classes_plugins","control_id","passive_event","passive","listboxId","_render","role","haspopup","escapeQuery","label","for","label_id","width","multiple","load","onOptionSelect","target_match","onItemSelect","onClick","e","onKeyDown","onKeyUp","onKeyPress","positionDropdown","onBlur","onFocus","onPaste","doc_mousedown","composedPath","blur","inputState","win_scroll","removeEventListener","revertSettings","hidden","insertAdjacentElement","setValue","refreshState","updateOriginalInput","refreshItems","close","disable","onChange","setup","registerOption","registerOptionGroup","templates","escape","callbacks","clearActiveItems","focus","onMouseDown","isFull","pastedText","inputValue","splitInput","piece","createItem","character","keyCode","which","constants","selectAll","open","next","getAdjacent","setActiveOption","prev","advanceSelection","deleteSelection","refreshOptions","wasFocused","showInput","deactivate","setActiveItem","setCaret","parentElement","lastQuery","addItem","canLoad","loadCallback","bind","clearActiveOption","setTextboxValue","getValue","silent","clear","addItems","setMaxItems","eventName","begin","end","swap","last","getLastActive","prototype","setActiveItemClass","removeActiveItem","hideInput","last_active","idx","scrollToOption","behavior","content","height_menu","clientHeight","scrollTop","height_item","offsetHeight","y","getBoundingClientRect","top","scroll","scrollBehavior","controlChildren","getSearchOptions","calculateScore","hashed","triggerDropdown","j","k","html","has_create_option","active_value","active_group","groups","groups_order","elements","results","active_option","show_dropdown","closest","min","opt_value","option_el","getOption","toggle","includes","createDocumentFragment","$id","$order","group_options","header","group_html","querySelectorAll","tok","add_template","template","insertBefore","canCreate","active_index","selectable","dat","addOptionGroup","hashed_id","removeOptionGroup","clearCache","clearOptionGroups","updateOption","item_new","index_item","value_new","getItem","uncacheValue","option_new","removeOption","removeItem","clearOptions","remove_node","cache_items","cache_options","rendered","all","x","isPending","wasFull","insertAtCaret","output","caret","lock","created","unlock","refreshValidityState","checkValidity","invalid","opts","AddSelected","prepend","visibility","display","context","rect","scrollY","left","scrollX","selection","tail","start","selectionStart","selectionEnd","rm_items","onDelete","pop","adjacent","nextElementSibling","new_pos","from","getElementsByClassName","enable","destroy","templateName","hook","when","method","new_fn","orig_method","result_new","define","joined","orig_onOptionSelect","UpdateCheckbox","checkbox","checked","orig_render_option","title","button","$","sortable","orig_lock","orig_unlock","$control","forcePlaceholderSize","ui","helper","overflow","each","headerClass","titleRowClass","labelClass","closeClass","close_link","setTabIndex","tabindex","test_input","cssText","style_name","resize","clientWidth","orig_deleteSelection","orig_keydown","previousSibling","nextSibling","orig_render_item","close_button","text","orig_canLoad","orig_clearActiveOption","orig_loadCallback","pagination","loading_more","firstUrl","canLoadMore","setNextUrl","next_url","getUrl","no_more_results","scrollHeight"],"mappings":"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"}